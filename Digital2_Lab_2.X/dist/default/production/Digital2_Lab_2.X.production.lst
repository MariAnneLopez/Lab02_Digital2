

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Nov 19 15:39:06 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 09/02/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0000                     	;# 
   468     0001                     	;# 
   469     0002                     	;# 
   470     0003                     	;# 
   471     0004                     	;# 
   472     0005                     	;# 
   473     0006                     	;# 
   474     0007                     	;# 
   475     0008                     	;# 
   476     0009                     	;# 
   477     000A                     	;# 
   478     000B                     	;# 
   479     000C                     	;# 
   480     000D                     	;# 
   481     000E                     	;# 
   482     000E                     	;# 
   483     000F                     	;# 
   484     0010                     	;# 
   485     0011                     	;# 
   486     0012                     	;# 
   487     0013                     	;# 
   488     0014                     	;# 
   489     0015                     	;# 
   490     0015                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001B                     	;# 
   498     001C                     	;# 
   499     001D                     	;# 
   500     001E                     	;# 
   501     001F                     	;# 
   502     0081                     	;# 
   503     0085                     	;# 
   504     0086                     	;# 
   505     0087                     	;# 
   506     0088                     	;# 
   507     0089                     	;# 
   508     008C                     	;# 
   509     008D                     	;# 
   510     008E                     	;# 
   511     008F                     	;# 
   512     0090                     	;# 
   513     0091                     	;# 
   514     0092                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0093                     	;# 
   518     0094                     	;# 
   519     0095                     	;# 
   520     0096                     	;# 
   521     0097                     	;# 
   522     0098                     	;# 
   523     0099                     	;# 
   524     009A                     	;# 
   525     009B                     	;# 
   526     009C                     	;# 
   527     009D                     	;# 
   528     009E                     	;# 
   529     009F                     	;# 
   530     0105                     	;# 
   531     0107                     	;# 
   532     0108                     	;# 
   533     0109                     	;# 
   534     010C                     	;# 
   535     010C                     	;# 
   536     010D                     	;# 
   537     010E                     	;# 
   538     010F                     	;# 
   539     0185                     	;# 
   540     0187                     	;# 
   541     0188                     	;# 
   542     0189                     	;# 
   543     018C                     	;# 
   544     018D                     	;# 
   545                           
   546                           	psect	idataBANK2
   547     052C                     __pidataBANK2:
   548                           
   549                           ;initializer for main@F1518
   550     052C  3431               	retlw	49
   551     052D  342E               	retlw	46
   552     052E  3420               	retlw	32
   553     052F  344C               	retlw	76
   554     0530  3465               	retlw	101
   555     0531  3465               	retlw	101
   556     0532  3472               	retlw	114
   557     0533  3420               	retlw	32
   558     0534  3470               	retlw	112
   559     0535  346F               	retlw	111
   560     0536  3474               	retlw	116
   561     0537  3465               	retlw	101
   562     0538  346E               	retlw	110
   563     0539  3463               	retlw	99
   564     053A  3469               	retlw	105
   565     053B  346F               	retlw	111
   566     053C  346D               	retlw	109
   567     053D  3465               	retlw	101
   568     053E  3474               	retlw	116
   569     053F  3472               	retlw	114
   570     0540  346F               	retlw	111
   571     0541  340D               	retlw	13
   572     0542  342B               	retlw	43
   573     0543  342E               	retlw	46
   574     0544  3420               	retlw	32
   575     0545  3449               	retlw	73
   576     0546  346E               	retlw	110
   577     0547  3463               	retlw	99
   578     0548  3472               	retlw	114
   579     0549  3465               	retlw	101
   580     054A  346D               	retlw	109
   581     054B  3465               	retlw	101
   582     054C  346E               	retlw	110
   583     054D  3474               	retlw	116
   584     054E  3461               	retlw	97
   585     054F  3472               	retlw	114
   586     0550  3420               	retlw	32
   587     0551  3470               	retlw	112
   588     0552  3475               	retlw	117
   589     0553  3465               	retlw	101
   590     0554  3472               	retlw	114
   591     0555  3474               	retlw	116
   592     0556  346F               	retlw	111
   593     0557  3420               	retlw	32
   594     0558  3442               	retlw	66
   595     0559  340D               	retlw	13
   596     055A  342D               	retlw	45
   597     055B  342E               	retlw	46
   598     055C  3420               	retlw	32
   599     055D  3444               	retlw	68
   600     055E  3465               	retlw	101
   601     055F  3463               	retlw	99
   602     0560  3472               	retlw	114
   603     0561  3465               	retlw	101
   604     0562  346D               	retlw	109
   605     0563  3465               	retlw	101
   606     0564  346E               	retlw	110
   607     0565  3474               	retlw	116
   608     0566  3461               	retlw	97
   609     0567  3472               	retlw	114
   610     0568  3420               	retlw	32
   611     0569  3470               	retlw	112
   612     056A  3475               	retlw	117
   613     056B  3465               	retlw	101
   614     056C  3472               	retlw	114
   615     056D  3474               	retlw	116
   616     056E  346F               	retlw	111
   617     056F  3420               	retlw	32
   618     0570  3442               	retlw	66
   619     0571  340D               	retlw	13
   620     0572  3400               	retlw	0
   621                           
   622                           	psect	strings
   623     0600                     __pstrings:
   624     0600                     stringtab:
   625     0600                     __stringtab:
   626                           
   627                           ;	String table - string pointers are 1 byte each
   628     0600  1BFF               	btfsc	btemp+1,7
   629     0601  2E0A               	ljmp	stringcode
   630     0602  1383               	bcf	3,7
   631     0603  187F               	btfsc	btemp+1,0
   632     0604  1783               	bsf	3,7
   633     0605  0800               	movf	0,w
   634     0606  0A84               	incf	4,f
   635     0607  1903               	skipnz
   636     0608  0AFF               	incf	btemp+1,f
   637     0609  0008               	return
   638     060A                     stringcode:
   639     060A                     stringdir:
   640     060A  3006               	movlw	high stringdir
   641     060B  008A               	movwf	10
   642     060C  0804               	movf	4,w
   643     060D  0A84               	incf	4,f
   644     060E  0782               	addwf	2,f
   645     060F                     __stringbase:
   646     060F  3400               	retlw	0
   647     0610                     __end_of__stringtab:
   648     0610                     _dpowers:
   649     0610  3401               	retlw	1
   650     0611  3400               	retlw	0
   651     0612  340A               	retlw	10
   652     0613  3400               	retlw	0
   653     0614  3464               	retlw	100
   654     0615  3400               	retlw	0
   655     0616  34E8               	retlw	232
   656     0617  3403               	retlw	3
   657     0618  3410               	retlw	16
   658     0619  3427               	retlw	39
   659     061A                     __end_of_dpowers:
   660     000B                     _INTCONbits	set	11
   661     0009                     _PORTE	set	9
   662     0007                     _PORTC	set	7
   663     0005                     _PORTA	set	5
   664     0006                     _PORTB	set	6
   665     0007                     _PORTCbits	set	7
   666     001A                     _RCREG	set	26
   667     0019                     _TXREG	set	25
   668     000C                     _PIR1bits	set	12
   669     0018                     _RCSTAbits	set	24
   670     0008                     _PORTD	set	8
   671     001E                     _ADRESH	set	30
   672     001F                     _ADCON0bits	set	31
   673     0065                     _RCIF	set	101
   674     0049                     _RE1	set	73
   675     0048                     _RE0	set	72
   676     0066                     _ADIF	set	102
   677     008F                     _OSCCONbits	set	143
   678     0089                     _TRISE	set	137
   679     0087                     _TRISC	set	135
   680     0088                     _TRISD	set	136
   681     0086                     _TRISB	set	134
   682     0085                     _TRISA	set	133
   683     009A                     _SPBRGH	set	154
   684     0099                     _SPBRG	set	153
   685     0098                     _TXSTAbits	set	152
   686     008C                     _PIE1bits	set	140
   687     009F                     _ADCON1bits	set	159
   688     0189                     _ANSELH	set	393
   689     0188                     _ANSEL	set	392
   690     0187                     _BAUDCTLbits	set	391
   691     061A                     STR_1:
   692     061A  344F               	retlw	79	;'O'
   693     061B  3470               	retlw	112	;'p'
   694     061C  3463               	retlw	99	;'c'
   695     061D  3469               	retlw	105	;'i'
   696     061E  346F               	retlw	111	;'o'
   697     061F  346E               	retlw	110	;'n'
   698     0620  3420               	retlw	32	;' '
   699     0621  346E               	retlw	110	;'n'
   700     0622  346F               	retlw	111	;'o'
   701     0623  3420               	retlw	32	;' '
   702     0624  3464               	retlw	100	;'d'
   703     0625  3465               	retlw	101	;'e'
   704     0626  3466               	retlw	102	;'f'
   705     0627  3469               	retlw	105	;'i'
   706     0628  346E               	retlw	110	;'n'
   707     0629  3469               	retlw	105	;'i'
   708     062A  3464               	retlw	100	;'d'
   709     062B  3461               	retlw	97	;'a'
   710     062C  340D               	retlw	13
   711     062D  3400               	retlw	0
   712     062E                     STR_4:
   713     062E  3443               	retlw	67	;'C'
   714     062F  346F               	retlw	111	;'o'
   715     0630  346E               	retlw	110	;'n'
   716     0631  3474               	retlw	116	;'t'
   717     0632  3461               	retlw	97	;'a'
   718     0633  3464               	retlw	100	;'d'
   719     0634  346F               	retlw	111	;'o'
   720     0635  3472               	retlw	114	;'r'
   721     0636  3400               	retlw	0
   722     0637                     STR_2:
   723     0637  3456               	retlw	86	;'V'
   724     0638  346F               	retlw	111	;'o'
   725     0639  346C               	retlw	108	;'l'
   726     063A  3474               	retlw	116	;'t'
   727     063B  3461               	retlw	97	;'a'
   728     063C  346A               	retlw	106	;'j'
   729     063D  3465               	retlw	101	;'e'
   730     063E  3400               	retlw	0
   731     063F                     STR_3:
   732     063F  3425               	retlw	37	;'%'
   733     0640  3464               	retlw	100	;'d'
   734     0641  340D               	retlw	13
   735     0642  3400               	retlw	0
   736     063F                     
   737                           	psect	cinit
   738     0015                     start_initialization:	
   739                           ; #config settings
   740                           
   741     0015                     __initialization:
   742                           
   743                           ; Initialize objects allocated to BANK2
   744     0015  1783               	bsf	3,7	;select IRP bank2
   745     0016  3057               	movlw	low (__pdataBANK2+71)
   746     0017  00FD               	movwf	btemp+-1
   747     0018  3005               	movlw	high __pidataBANK2
   748     0019  00FE               	movwf	btemp
   749     001A  302C               	movlw	low __pidataBANK2
   750     001B  00FF               	movwf	btemp+1
   751     001C  3010               	movlw	low __pdataBANK2
   752     001D  0084               	movwf	4
   753     001E  120A  118A  27C9  120A  118A  	fcall	init_ram0
   754                           
   755                           ; Clear objects allocated to BANK3
   756     0023  1683               	bsf	3,5	;RP0=1, select bank3
   757     0024  1703               	bsf	3,6	;RP1=1, select bank3
   758     0025  01D7               	clrf	__pbssBANK3& (0+127)
   759     0026  01D8               	clrf	(__pbssBANK3+1)& (0+127)
   760     0027  01D9               	clrf	(__pbssBANK3+2)& (0+127)
   761     0028  01DA               	clrf	(__pbssBANK3+3)& (0+127)
   762     0029  01DB               	clrf	(__pbssBANK3+4)& (0+127)
   763     002A  01DC               	clrf	(__pbssBANK3+5)& (0+127)
   764     002B  01DD               	clrf	(__pbssBANK3+6)& (0+127)
   765     002C  01DE               	clrf	(__pbssBANK3+7)& (0+127)
   766     002D  01DF               	clrf	(__pbssBANK3+8)& (0+127)
   767     002E  01E0               	clrf	(__pbssBANK3+9)& (0+127)
   768     002F  01E1               	clrf	(__pbssBANK3+10)& (0+127)
   769     0030  01E2               	clrf	(__pbssBANK3+11)& (0+127)
   770                           
   771                           ; Clear objects allocated to BANK0
   772     0031  1283               	bcf	3,5	;RP0=0, select bank0
   773     0032  1303               	bcf	3,6	;RP1=0, select bank0
   774     0033  01C8               	clrf	__pbssBANK0& (0+127)
   775     0034  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   776     0035  01CA               	clrf	(__pbssBANK0+2)& (0+127)
   777     0036  01CB               	clrf	(__pbssBANK0+3)& (0+127)
   778     0037  01CC               	clrf	(__pbssBANK0+4)& (0+127)
   779     0038  01CD               	clrf	(__pbssBANK0+5)& (0+127)
   780     0039  01CE               	clrf	(__pbssBANK0+6)& (0+127)
   781     003A                     end_of_initialization:	
   782                           ;End of C runtime variable initialization code
   783                           
   784     003A                     __end_of__initialization:
   785     003A  0183               	clrf	3
   786     003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   787                           
   788                           	psect	bssBANK0
   789     0048                     __pbssBANK0:
   790     0048                     _V:
   791     0048                     	ds	2
   792     004A                     _hiper:
   793     004A                     	ds	1
   794     004B                     _volt:
   795     004B                     	ds	4
   796                           
   797                           	psect	bssBANK3
   798     01D7                     __pbssBANK3:
   799     01D7                     _contador:
   800     01D7                     	ds	2
   801     01D9                     _V_out:
   802     01D9                     	ds	2
   803     01DB                     _cont:
   804     01DB                     	ds	8
   805                           
   806                           	psect	dataBANK2
   807     0110                     __pdataBANK2:
   808     0110                     main@F1518:
   809     0110                     	ds	71
   810                           
   811                           	psect	inittext
   812     07C5                     init_fetch0:	
   813                           ;	Called with low address in FSR and high address in W
   814                           
   815     07C5  087E               	movf	btemp,w
   816     07C6  008A               	movwf	10
   817     07C7  087F               	movf	btemp+1,w
   818     07C8  0082               	movwf	2
   819     07C9                     init_ram0:	
   820                           ;Called with:
   821                           ;	high address of idata address in btemp 
   822                           ;	low address of idata address in btemp+1 
   823                           ;	low address of data in FSR
   824                           ;	high address + 1 of data in btemp-1
   825                           
   826     07C9  120A  118A  27C5  120A  118A  	fcall	init_fetch0
   827     07CE  0080               	movwf	0
   828     07CF  0A84               	incf	4,f
   829     07D0  0804               	movf	4,w
   830     07D1  067D               	xorwf	btemp+-1,w
   831     07D2  1903               	btfsc	3,2
   832     07D3  3400               	retlw	0
   833     07D4  0AFF               	incf	btemp+1,f
   834     07D5  1903               	btfsc	3,2
   835     07D6  0AFE               	incf	btemp,f
   836     07D7  2FC9               	goto	init_ram0
   837                           
   838                           	psect	cstackBANK3
   839     0190                     __pcstackBANK3:
   840     0190                     main@texto:
   841                           
   842                           ; 71 bytes @ 0x0
   843     0190                     	ds	71
   844                           
   845                           	psect	cstackBANK1
   846     00A0                     __pcstackBANK1:
   847     00A0                     ??_Lcd_Write_String:
   848     00A0                     ?___lwmod:	
   849                           ; 1 bytes @ 0x0
   850                           
   851     00A0                     ___lwmod@divisor:	
   852                           ; 2 bytes @ 0x0
   853                           
   854                           
   855                           ; 2 bytes @ 0x0
   856     00A0                     	ds	2
   857     00A2                     ___lwmod@dividend:
   858                           
   859                           ; 2 bytes @ 0x2
   860     00A2                     	ds	1
   861     00A3                     Lcd_Write_String@i:
   862                           
   863                           ; 2 bytes @ 0x3
   864     00A3                     	ds	1
   865     00A4                     ___lwmod@counter:
   866                           
   867                           ; 1 bytes @ 0x4
   868     00A4                     	ds	1
   869     00A5                     ?_sprintf:
   870     00A5                     sprintf@sp:	
   871                           ; 2 bytes @ 0x5
   872                           
   873                           
   874                           ; 2 bytes @ 0x5
   875     00A5                     	ds	2
   876     00A7                     sprintf@f:
   877                           
   878                           ; 1 bytes @ 0x7
   879     00A7                     	ds	3
   880     00AA                     ??_sprintf:
   881                           
   882                           ; 1 bytes @ 0xA
   883     00AA                     	ds	3
   884     00AD                     sprintf@ap:
   885                           
   886                           ; 1 bytes @ 0xD
   887     00AD                     	ds	1
   888     00AE                     sprintf@flag:
   889                           
   890                           ; 1 bytes @ 0xE
   891     00AE                     	ds	1
   892     00AF                     sprintf@prec:
   893                           
   894                           ; 1 bytes @ 0xF
   895     00AF                     	ds	1
   896     00B0                     sprintf@val:
   897                           
   898                           ; 2 bytes @ 0x10
   899     00B0                     	ds	2
   900     00B2                     sprintf@c:
   901                           
   902                           ; 1 bytes @ 0x12
   903     00B2                     	ds	1
   904     00B3                     ??_main:
   905                           
   906                           ; 1 bytes @ 0x13
   907     00B3                     	ds	4
   908                           
   909                           	psect	cstackCOMMON
   910     0070                     __pcstackCOMMON:
   911     0070                     ?_setup:
   912     0070                     ?_adc_change_channel:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     ?_Lcd_Port:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     ?_Lcd_Cmd:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0070                     ?_Lcd_Clear:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ?_Lcd_Init:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ?_Lcd_Write_Char:	
   928                           ; 1 bytes @ 0x0
   929                           
   930     0070                     ?_isr:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ?_main:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0070                     ?i1_UART_write_char:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0070                     ?_adc_read:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0070                     ?___lmul:	
   943                           ; 2 bytes @ 0x0
   944                           
   945     0070                     adc_change_channel@channel:	
   946                           ; 4 bytes @ 0x0
   947                           
   948     0070                     i1UART_write_char@c:	
   949                           ; 2 bytes @ 0x0
   950                           
   951     0070                     ___lmul@multiplier:	
   952                           ; 2 bytes @ 0x0
   953                           
   954                           
   955                           ; 4 bytes @ 0x0
   956     0070                     	ds	2
   957     0072                     ??_adc_read:
   958     0072                     ??_adc_change_channel:	
   959                           ; 1 bytes @ 0x2
   960                           
   961     0072                     ??i1_UART_write_char:	
   962                           ; 1 bytes @ 0x2
   963                           
   964                           
   965                           ; 1 bytes @ 0x2
   966     0072                     	ds	2
   967     0074                     ___lmul@multiplicand:
   968                           
   969                           ; 4 bytes @ 0x4
   970     0074                     	ds	4
   971     0078                     ??___lmul:
   972                           
   973                           ; 1 bytes @ 0x8
   974     0078                     	ds	1
   975     0079                     ___lmul@product:
   976                           
   977                           ; 4 bytes @ 0x9
   978     0079                     	ds	4
   979     007D                     ??___aldiv:
   980                           
   981                           ; 1 bytes @ 0xD
   982     007D                     	ds	1
   983     007E                     ??_map:
   984                           
   985                           	psect	cstackBANK0
   986     0020                     __pcstackBANK0:	
   987                           ; 1 bytes @ 0xE
   988                           
   989     0020                     ?___aldiv:
   990     0020                     ___aldiv@divisor:	
   991                           ; 4 bytes @ 0x0
   992                           
   993                           
   994                           ; 4 bytes @ 0x0
   995     0020                     	ds	4
   996     0024                     ___aldiv@dividend:
   997                           
   998                           ; 4 bytes @ 0x4
   999     0024                     	ds	4
  1000     0028                     ___aldiv@counter:
  1001                           
  1002                           ; 1 bytes @ 0x8
  1003     0028                     	ds	1
  1004     0029                     ___aldiv@sign:
  1005                           
  1006                           ; 1 bytes @ 0x9
  1007     0029                     	ds	1
  1008     002A                     ___aldiv@quotient:
  1009                           
  1010                           ; 4 bytes @ 0xA
  1011     002A                     	ds	4
  1012     002E                     ?_map:
  1013     002E                     map@val:	
  1014                           ; 2 bytes @ 0xE
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0xE
  1018     002E                     	ds	2
  1019     0030                     map@min_in:
  1020                           
  1021                           ; 2 bytes @ 0x10
  1022     0030                     	ds	2
  1023     0032                     map@max_in:
  1024                           
  1025                           ; 2 bytes @ 0x12
  1026     0032                     	ds	2
  1027     0034                     map@min_out:
  1028                           
  1029                           ; 2 bytes @ 0x14
  1030     0034                     	ds	2
  1031     0036                     map@max_out:
  1032                           
  1033                           ; 2 bytes @ 0x16
  1034     0036                     	ds	2
  1035     0038                     map@vo:
  1036                           
  1037                           ; 2 bytes @ 0x18
  1038     0038                     	ds	2
  1039     003A                     ??_isr:
  1040                           
  1041                           ; 1 bytes @ 0x1A
  1042     003A                     	ds	6
  1043     0040                     isr@opcion:
  1044                           
  1045                           ; 1 bytes @ 0x20
  1046     0040                     	ds	1
  1047     0041                     ?_adc_init:
  1048     0041                     ??_Lcd_Port:	
  1049                           ; 1 bytes @ 0x21
  1050                           
  1051     0041                     ?_UART_RX_config:	
  1052                           ; 1 bytes @ 0x21
  1053                           
  1054     0041                     ?_UART_TX_config:	
  1055                           ; 1 bytes @ 0x21
  1056                           
  1057     0041                     ?_UART_write_char:	
  1058                           ; 1 bytes @ 0x21
  1059                           
  1060     0041                     ?___lwdiv:	
  1061                           ; 1 bytes @ 0x21
  1062                           
  1063     0041                     Lcd_Port@a:	
  1064                           ; 2 bytes @ 0x21
  1065                           
  1066     0041                     adc_init@channel:	
  1067                           ; 1 bytes @ 0x21
  1068                           
  1069     0041                     UART_RX_config@baudrate:	
  1070                           ; 2 bytes @ 0x21
  1071                           
  1072     0041                     UART_TX_config@baudrate:	
  1073                           ; 2 bytes @ 0x21
  1074                           
  1075     0041                     UART_write_char@c:	
  1076                           ; 2 bytes @ 0x21
  1077                           
  1078     0041                     ___lwdiv@divisor:	
  1079                           ; 2 bytes @ 0x21
  1080                           
  1081                           
  1082                           ; 2 bytes @ 0x21
  1083     0041                     	ds	1
  1084     0042                     ??_Lcd_Cmd:
  1085     0042                     ??_Lcd_Write_Char:	
  1086                           ; 1 bytes @ 0x22
  1087                           
  1088                           
  1089                           ; 1 bytes @ 0x22
  1090     0042                     	ds	1
  1091     0043                     ??_adc_init:
  1092     0043                     ??_UART_RX_config:	
  1093                           ; 1 bytes @ 0x23
  1094                           
  1095     0043                     ??_UART_TX_config:	
  1096                           ; 1 bytes @ 0x23
  1097                           
  1098     0043                     ??_UART_write_char:	
  1099                           ; 1 bytes @ 0x23
  1100                           
  1101     0043                     Lcd_Write_Char@y:	
  1102                           ; 1 bytes @ 0x23
  1103                           
  1104     0043                     ___lwdiv@dividend:	
  1105                           ; 1 bytes @ 0x23
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x23
  1109     0043                     	ds	1
  1110     0044                     Lcd_Cmd@a:
  1111     0044                     Lcd_Write_Char@a:	
  1112                           ; 1 bytes @ 0x24
  1113                           
  1114                           
  1115                           ; 1 bytes @ 0x24
  1116     0044                     	ds	1
  1117     0045                     ??_setup:
  1118     0045                     ??_Lcd_Clear:	
  1119                           ; 1 bytes @ 0x25
  1120                           
  1121     0045                     ?_Lcd_Set_Cursor:	
  1122                           ; 1 bytes @ 0x25
  1123                           
  1124     0045                     ??_Lcd_Init:	
  1125                           ; 1 bytes @ 0x25
  1126                           
  1127     0045                     ?_Lcd_Write_String:	
  1128                           ; 1 bytes @ 0x25
  1129                           
  1130     0045                     ??___lwdiv:	
  1131                           ; 1 bytes @ 0x25
  1132                           
  1133     0045                     Lcd_Set_Cursor@b:	
  1134                           ; 1 bytes @ 0x25
  1135                           
  1136     0045                     Lcd_Write_String@a:	
  1137                           ; 1 bytes @ 0x25
  1138                           
  1139     0045                     ___lwdiv@quotient:	
  1140                           ; 2 bytes @ 0x25
  1141                           
  1142                           
  1143                           ; 2 bytes @ 0x25
  1144     0045                     	ds	1
  1145     0046                     ??_Lcd_Set_Cursor:
  1146     0046                     Lcd_Set_Cursor@a:	
  1147                           ; 1 bytes @ 0x26
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x26
  1151     0046                     	ds	1
  1152     0047                     Lcd_Set_Cursor@temp:
  1153     0047                     ___lwdiv@counter:	
  1154                           ; 1 bytes @ 0x27
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0x27
  1158     0047                     	ds	1
  1159     0048                     ??___lwmod:
  1160                           
  1161                           	psect	maintext
  1162     003E                     __pmaintext:	
  1163                           ; 1 bytes @ 0x28
  1164 ;;
  1165 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1166 ;;
  1167 ;; *************** function _main *****************
  1168 ;; Defined at:
  1169 ;;		line 83 in file "Lab_2_main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  texto          71    0[BANK3 ] unsigned char [71]
  1174 ;;  a               2    0        unsigned int 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : B00/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       0       0       0       0
  1185 ;;      Locals:         0       0       0      71       0
  1186 ;;      Temps:          0       0       4       0       0
  1187 ;;      Totals:         0       0       4      71       0
  1188 ;;Total ram usage:       75 bytes
  1189 ;; Hardware stack levels required when called: 6
  1190 ;; This function calls:
  1191 ;;		_Lcd_Clear
  1192 ;;		_Lcd_Init
  1193 ;;		_Lcd_Set_Cursor
  1194 ;;		_Lcd_Write_String
  1195 ;;		_UART_write_char
  1196 ;;		_setup
  1197 ;;		_sprintf
  1198 ;; This function is called by:
  1199 ;;		Startup code after reset
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203     003E                     _main:	
  1204                           ;psect for function _main
  1205                           
  1206     003E                     l2107:	
  1207                           ;incstack = 0
  1208                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1209                           
  1210                           
  1211                           ;Lab_2_main.c: 85:     setup();
  1212     003E  120A  118A  24E4  120A  118A  	fcall	_setup
  1213                           
  1214                           ;Lab_2_main.c: 86:     unsigned int a;;Lab_2_main.c: 87:     Lcd_Init();
  1215     0043  120A  118A  2444  120A  118A  	fcall	_Lcd_Init
  1216     0048                     l2109:
  1217                           
  1218                           ;Lab_2_main.c: 88:     char texto[] = "1. Leer potenciometro\r+. Incrementar puerto B\r-
      +                          . Decrementar puerto B\r";
  1219     0048  3090               	movlw	main@texto& (0+255)
  1220     0049  0084               	movwf	4
  1221     004A  3010               	movlw	low main@F1518
  1222     004B  1683               	bsf	3,5	;RP0=1, select bank1
  1223     004C  1303               	bcf	3,6	;RP1=0, select bank1
  1224     004D  00B3               	movwf	??_main^(0+128)
  1225     004E  0804               	movf	4,w
  1226     004F  00B4               	movwf	(??_main^(0+128)+1)
  1227     0050  3047               	movlw	71
  1228     0051  00B5               	movwf	(??_main^(0+128)+2)
  1229     0052                     u1530:
  1230     0052  0833               	movf	??_main^(0+128),w
  1231     0053  0084               	movwf	4
  1232     0054  1783               	bsf	3,7	;select IRP bank2
  1233     0055  0800               	movf	0,w
  1234     0056  00B6               	movwf	(??_main^(0+128)+3)
  1235     0057  0AB3               	incf	??_main^(0+128),f
  1236     0058  0834               	movf	(??_main^(0+128)+1),w
  1237     0059  0084               	movwf	4
  1238     005A  0836               	movf	(??_main^(0+128)+3),w
  1239     005B  0080               	movwf	0
  1240     005C  0AB4               	incf	(??_main^(0+128)+1),f
  1241     005D  0BB5               	decfsz	(??_main^(0+128)+2),f
  1242     005E  2852               	goto	u1530
  1243     005F                     l2111:
  1244                           
  1245                           ;Lab_2_main.c: 90:     {;Lab_2_main.c: 91:         if(ADCON0bits.GO == 0)
  1246     005F  1283               	bcf	3,5	;RP0=0, select bank0
  1247     0060  1303               	bcf	3,6	;RP1=0, select bank0
  1248     0061  189F               	btfsc	31,1	;volatile
  1249     0062  2864               	goto	u1541
  1250     0063  2865               	goto	u1540
  1251     0064                     u1541:
  1252     0064  2873               	goto	l2117
  1253     0065                     u1540:
  1254     0065                     l2113:
  1255                           
  1256                           ;Lab_2_main.c: 92:         {;Lab_2_main.c: 93:            _delay((unsigned long)((10)*(8
      +                          000000/4000.0)));
  1257     0065  301A               	movlw	26
  1258     0066  1683               	bsf	3,5	;RP0=1, select bank1
  1259     0067  1303               	bcf	3,6	;RP1=0, select bank1
  1260     0068  00B4               	movwf	(??_main^(0+128)+1)
  1261     0069  30F7               	movlw	247
  1262     006A  00B3               	movwf	??_main^(0+128)
  1263     006B                     u1597:
  1264     006B  0BB3               	decfsz	??_main^(0+128),f
  1265     006C  286B               	goto	u1597
  1266     006D  0BB4               	decfsz	(??_main^(0+128)+1),f
  1267     006E  286B               	goto	u1597
  1268     006F  2870               	nop2
  1269     0070                     l2115:
  1270                           
  1271                           ;Lab_2_main.c: 94:             ADCON0bits.GO = 1;
  1272     0070  1283               	bcf	3,5	;RP0=0, select bank0
  1273     0071  1303               	bcf	3,6	;RP1=0, select bank0
  1274     0072  149F               	bsf	31,1	;volatile
  1275     0073                     l2117:
  1276                           
  1277                           ;Lab_2_main.c: 97:         UART_write_char(texto);
  1278     0073  3090               	movlw	(low (main@texto| (0+256)))& (0+255)
  1279     0074  00C1               	movwf	UART_write_char@c
  1280     0075  3001               	movlw	1
  1281     0076  00C2               	movwf	UART_write_char@c+1
  1282     0077  120A  118A  26FB  120A  118A  	fcall	_UART_write_char
  1283     007C                     l2119:
  1284                           
  1285                           ;Lab_2_main.c: 99:         Lcd_Clear();
  1286     007C  120A  118A  27D8  120A  118A  	fcall	_Lcd_Clear
  1287     0081                     l2121:
  1288                           
  1289                           ;Lab_2_main.c: 100:         Lcd_Set_Cursor(1,1);
  1290     0081  1283               	bcf	3,5	;RP0=0, select bank0
  1291     0082  1303               	bcf	3,6	;RP1=0, select bank0
  1292     0083  01C5               	clrf	Lcd_Set_Cursor@b
  1293     0084  0AC5               	incf	Lcd_Set_Cursor@b,f
  1294     0085  3001               	movlw	1
  1295     0086  120A  118A  274F  120A  118A  	fcall	_Lcd_Set_Cursor
  1296     008B                     l2123:
  1297                           
  1298                           ;Lab_2_main.c: 101:         Lcd_Write_String("Voltaje");
  1299     008B  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1300     008C  1283               	bcf	3,5	;RP0=0, select bank0
  1301     008D  1303               	bcf	3,6	;RP1=0, select bank0
  1302     008E  00C5               	movwf	Lcd_Write_String@a
  1303     008F  3080               	movlw	128
  1304     0090  00C6               	movwf	Lcd_Write_String@a+1
  1305     0091  120A  118A  23E0  120A  118A  	fcall	_Lcd_Write_String
  1306     0096                     l2125:
  1307                           
  1308                           ;Lab_2_main.c: 102:         Lcd_Set_Cursor(2,1);
  1309     0096  1283               	bcf	3,5	;RP0=0, select bank0
  1310     0097  1303               	bcf	3,6	;RP1=0, select bank0
  1311     0098  01C5               	clrf	Lcd_Set_Cursor@b
  1312     0099  0AC5               	incf	Lcd_Set_Cursor@b,f
  1313     009A  3002               	movlw	2
  1314     009B  120A  118A  274F  120A  118A  	fcall	_Lcd_Set_Cursor
  1315     00A0                     l2127:
  1316                           
  1317                           ;Lab_2_main.c: 103:         sprintf(volt, "%d\r", V_out);
  1318     00A0  304B               	movlw	(low (_volt| 0))& (0+255)
  1319     00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1320     00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1321     00A3  00A5               	movwf	sprintf@sp^(0+128)
  1322     00A4  3000               	movlw	0
  1323     00A5  00A6               	movwf	(sprintf@sp+1)^(0+128)
  1324     00A6  3030               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1325     00A7  00A7               	movwf	sprintf@f^(0+128)
  1326     00A8  1683               	bsf	3,5	;RP0=1, select bank3
  1327     00A9  1703               	bsf	3,6	;RP1=1, select bank3
  1328     00AA  085A               	movf	(_V_out+1)^(0+384),w
  1329     00AB  1683               	bsf	3,5	;RP0=1, select bank1
  1330     00AC  1303               	bcf	3,6	;RP1=0, select bank1
  1331     00AD  00A9               	movwf	((?_sprintf+1)^(0+128)+3)
  1332     00AE  1683               	bsf	3,5	;RP0=1, select bank3
  1333     00AF  1703               	bsf	3,6	;RP1=1, select bank3
  1334     00B0  0859               	movf	_V_out^(0+384),w
  1335     00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1336     00B2  1303               	bcf	3,6	;RP1=0, select bank1
  1337     00B3  00A8               	movwf	(?_sprintf^(0+128)+3)
  1338     00B4  120A  118A  2147  120A  118A  	fcall	_sprintf
  1339     00B9                     l2129:
  1340                           
  1341                           ;Lab_2_main.c: 104:         Lcd_Write_String(volt);
  1342     00B9  304B               	movlw	(low (_volt| 0))& (0+255)
  1343     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1344     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1345     00BC  00C5               	movwf	Lcd_Write_String@a
  1346     00BD  3000               	movlw	0
  1347     00BE  00C6               	movwf	Lcd_Write_String@a+1
  1348     00BF  120A  118A  23E0  120A  118A  	fcall	_Lcd_Write_String
  1349     00C4                     l2131:
  1350                           
  1351                           ;Lab_2_main.c: 106:         Lcd_Set_Cursor(1,9);
  1352     00C4  3009               	movlw	9
  1353     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1354     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1355     00C7  00C5               	movwf	Lcd_Set_Cursor@b
  1356     00C8  3001               	movlw	1
  1357     00C9  120A  118A  274F  120A  118A  	fcall	_Lcd_Set_Cursor
  1358     00CE                     l2133:
  1359                           
  1360                           ;Lab_2_main.c: 107:         Lcd_Write_String("Contador");
  1361     00CE  301F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1362     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1363     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1364     00D1  00C5               	movwf	Lcd_Write_String@a
  1365     00D2  3080               	movlw	128
  1366     00D3  00C6               	movwf	Lcd_Write_String@a+1
  1367     00D4  120A  118A  23E0  120A  118A  	fcall	_Lcd_Write_String
  1368     00D9                     l2135:
  1369                           
  1370                           ;Lab_2_main.c: 108:         Lcd_Set_Cursor(2,9);
  1371     00D9  3009               	movlw	9
  1372     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1373     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1374     00DC  00C5               	movwf	Lcd_Set_Cursor@b
  1375     00DD  3002               	movlw	2
  1376     00DE  120A  118A  274F  120A  118A  	fcall	_Lcd_Set_Cursor
  1377     00E3                     l2137:
  1378                           
  1379                           ;Lab_2_main.c: 109:         sprintf(cont, "%d\r", contador);
  1380     00E3  30DB               	movlw	(low (_cont| (0+256)))& (0+255)
  1381     00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1382     00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1383     00E6  00A5               	movwf	sprintf@sp^(0+128)
  1384     00E7  3001               	movlw	1
  1385     00E8  00A6               	movwf	(sprintf@sp+1)^(0+128)
  1386     00E9  3030               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1387     00EA  00A7               	movwf	sprintf@f^(0+128)
  1388     00EB  1683               	bsf	3,5	;RP0=1, select bank3
  1389     00EC  1703               	bsf	3,6	;RP1=1, select bank3
  1390     00ED  0858               	movf	(_contador+1)^(0+384),w
  1391     00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1392     00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1393     00F0  00A9               	movwf	((?_sprintf+1)^(0+128)+3)
  1394     00F1  1683               	bsf	3,5	;RP0=1, select bank3
  1395     00F2  1703               	bsf	3,6	;RP1=1, select bank3
  1396     00F3  0857               	movf	_contador^(0+384),w
  1397     00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1398     00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1399     00F6  00A8               	movwf	(?_sprintf^(0+128)+3)
  1400     00F7  120A  118A  2147  120A  118A  	fcall	_sprintf
  1401     00FC                     l2139:
  1402                           
  1403                           ;Lab_2_main.c: 110:         Lcd_Write_String(cont);
  1404     00FC  30DB               	movlw	(low (_cont| (0+256)))& (0+255)
  1405     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1406     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1407     00FF  00C5               	movwf	Lcd_Write_String@a
  1408     0100  3001               	movlw	1
  1409     0101  00C6               	movwf	Lcd_Write_String@a+1
  1410     0102  120A  118A  23E0  120A  118A  	fcall	_Lcd_Write_String
  1411     0107                     l2141:
  1412                           
  1413                           ;Lab_2_main.c: 112:         if (!PORTCbits.RC0){
  1414     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1415     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1416     0109  1807               	btfsc	7,0	;volatile
  1417     010A  290C               	goto	u1551
  1418     010B  290D               	goto	u1550
  1419     010C                     u1551:
  1420     010C  291B               	goto	l2147
  1421     010D                     u1550:
  1422     010D                     l237:	
  1423                           ;Lab_2_main.c: 114:             }
  1424                           
  1425                           
  1426                           ;Lab_2_main.c: 113:             while(!PORTCbits.RC0){
  1427     010D  1C07               	btfss	7,0	;volatile
  1428     010E  2910               	goto	u1561
  1429     010F  2911               	goto	u1560
  1430     0110                     u1561:
  1431     0110  290D               	goto	l237
  1432     0111                     u1560:
  1433     0111                     l2145:
  1434                           
  1435                           ;Lab_2_main.c: 115:             contador = contador + 1;
  1436     0111  1683               	bsf	3,5	;RP0=1, select bank3
  1437     0112  1703               	bsf	3,6	;RP1=1, select bank3
  1438     0113  0857               	movf	_contador^(0+384),w
  1439     0114  3E01               	addlw	1
  1440     0115  00D7               	movwf	_contador^(0+384)
  1441     0116  0858               	movf	(_contador+1)^(0+384),w
  1442     0117  1803               	skipnc
  1443     0118  3E01               	addlw	1
  1444     0119  3E00               	addlw	0
  1445     011A  00D8               	movwf	(_contador+1)^(0+384)
  1446     011B                     l2147:
  1447                           
  1448                           ;Lab_2_main.c: 117:         if (!PORTCbits.RC3){
  1449     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1450     011C  1303               	bcf	3,6	;RP1=0, select bank0
  1451     011D  1987               	btfsc	7,3	;volatile
  1452     011E  2920               	goto	u1571
  1453     011F  2921               	goto	u1570
  1454     0120                     u1571:
  1455     0120  292F               	goto	l2153
  1456     0121                     u1570:
  1457     0121                     l241:	
  1458                           ;Lab_2_main.c: 119:             }
  1459                           
  1460                           
  1461                           ;Lab_2_main.c: 118:             while(!PORTCbits.RC3){
  1462     0121  1D87               	btfss	7,3	;volatile
  1463     0122  2924               	goto	u1581
  1464     0123  2925               	goto	u1580
  1465     0124                     u1581:
  1466     0124  2921               	goto	l241
  1467     0125                     u1580:
  1468     0125                     l2151:
  1469                           
  1470                           ;Lab_2_main.c: 120:             contador = contador - 1;
  1471     0125  1683               	bsf	3,5	;RP0=1, select bank3
  1472     0126  1703               	bsf	3,6	;RP1=1, select bank3
  1473     0127  0857               	movf	_contador^(0+384),w
  1474     0128  3EFF               	addlw	255
  1475     0129  00D7               	movwf	_contador^(0+384)
  1476     012A  0858               	movf	(_contador+1)^(0+384),w
  1477     012B  1803               	skipnc
  1478     012C  3E01               	addlw	1
  1479     012D  3EFF               	addlw	255
  1480     012E  00D8               	movwf	(_contador+1)^(0+384)
  1481     012F                     l2153:
  1482                           
  1483                           ;Lab_2_main.c: 123:         PORTB = contador;
  1484     012F  1683               	bsf	3,5	;RP0=1, select bank3
  1485     0130  1703               	bsf	3,6	;RP1=1, select bank3
  1486     0131  0857               	movf	_contador^(0+384),w
  1487     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1488     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1489     0134  0086               	movwf	6	;volatile
  1490     0135                     l2155:
  1491                           
  1492                           ;Lab_2_main.c: 124:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1493     0135  3006               	movlw	6
  1494     0136  1683               	bsf	3,5	;RP0=1, select bank1
  1495     0137  1303               	bcf	3,6	;RP1=0, select bank1
  1496     0138  00B5               	movwf	(??_main^(0+128)+2)
  1497     0139  3013               	movlw	19
  1498     013A  00B4               	movwf	(??_main^(0+128)+1)
  1499     013B  30AD               	movlw	173
  1500     013C  00B3               	movwf	??_main^(0+128)
  1501     013D                     u1607:
  1502     013D  0BB3               	decfsz	??_main^(0+128),f
  1503     013E  293D               	goto	u1607
  1504     013F  0BB4               	decfsz	(??_main^(0+128)+1),f
  1505     0140  293D               	goto	u1607
  1506     0141  0BB5               	decfsz	(??_main^(0+128)+2),f
  1507     0142  293D               	goto	u1607
  1508     0143  285F               	goto	l2111
  1509     0144  120A  118A  2812   	ljmp	start
  1510     0147                     __end_of_main:
  1511                           
  1512                           	psect	text1
  1513     0147                     __ptext1:	
  1514 ;; *************** function _sprintf *****************
  1515 ;; Defined at:
  1516 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  sp              2    5[BANK1 ] PTR unsigned char 
  1519 ;;		 -> cont(8), volt(4), 
  1520 ;;  f               1    7[BANK1 ] PTR const unsigned char 
  1521 ;;		 -> STR_5(4), STR_3(4), 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  tmpval          4    0        struct .
  1524 ;;  val             2   16[BANK1 ] unsigned int 
  1525 ;;  cp              2    0        PTR const unsigned char 
  1526 ;;  len             2    0        unsigned int 
  1527 ;;  c               1   18[BANK1 ] unsigned char 
  1528 ;;  prec            1   15[BANK1 ] char 
  1529 ;;  flag            1   14[BANK1 ] unsigned char 
  1530 ;;  ap              1   13[BANK1 ] PTR void [1]
  1531 ;;		 -> ?_sprintf(2), 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2    5[BANK1 ] int 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1541 ;;      Params:         0       0       5       0       0
  1542 ;;      Locals:         0       0       6       0       0
  1543 ;;      Temps:          0       0       3       0       0
  1544 ;;      Totals:         0       0      14       0       0
  1545 ;;Total ram usage:       14 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; Hardware stack levels required when called: 4
  1548 ;; This function calls:
  1549 ;;		___lwdiv
  1550 ;;		___lwmod
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556     0147                     _sprintf:	
  1557                           ;psect for function _sprintf
  1558                           
  1559     0147                     l2039:	
  1560                           ;incstack = 0
  1561                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1562                           
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1565     0147  30A8               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  1566     0148  1683               	bsf	3,5	;RP0=1, select bank1
  1567     0149  1303               	bcf	3,6	;RP1=0, select bank1
  1568     014A  00AD               	movwf	sprintf@ap^(0+128)
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1571     014B  2A29               	goto	l2093
  1572     014C                     l2041:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1575     014C  3025               	movlw	37
  1576     014D  0632               	xorwf	sprintf@c^(0+128),w
  1577     014E  1903               	btfsc	3,2
  1578     014F  2951               	goto	u1461
  1579     0150  2952               	goto	u1460
  1580     0151                     u1461:
  1581     0151  2960               	goto	l2047
  1582     0152                     u1460:
  1583     0152                     l2043:
  1584                           
  1585                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1586     0152  0825               	movf	sprintf@sp^(0+128),w
  1587     0153  0084               	movwf	4
  1588     0154  1783               	bsf	3,7
  1589     0155  1C26               	btfss	(sprintf@sp+1)^(0+128),0
  1590     0156  1383               	bcf	3,7
  1591     0157  0832               	movf	sprintf@c^(0+128),w
  1592     0158  0080               	movwf	0
  1593     0159                     l2045:
  1594     0159  3001               	movlw	1
  1595     015A  07A5               	addwf	sprintf@sp^(0+128),f
  1596     015B  1803               	skipnc
  1597     015C  0AA6               	incf	(sprintf@sp+1)^(0+128),f
  1598     015D  3000               	movlw	0
  1599     015E  07A6               	addwf	(sprintf@sp+1)^(0+128),f
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1602     015F  2A29               	goto	l2093
  1603     0160                     l2047:
  1604                           
  1605                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1606     0160  01AE               	clrf	sprintf@flag^(0+128)
  1607     0161                     l2051:	
  1608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1609                           
  1610     0161  3001               	movlw	1
  1611     0162  07A7               	addwf	sprintf@f^(0+128),f
  1612     0163  30FF               	movlw	-1
  1613     0164  0727               	addwf	sprintf@f^(0+128),w
  1614     0165  0084               	movwf	4
  1615     0166  120A  118A  260A  120A  118A  	fcall	stringdir
  1616     016B  00B2               	movwf	sprintf@c^(0+128)
  1617     016C  00AA               	movwf	??_sprintf^(0+128)
  1618     016D  01AB               	clrf	(??_sprintf^(0+128)+1)
  1619                           
  1620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1621                           ; Switch size 1, requested type "simple"
  1622                           ; Number of cases is 1, Range of values is 0 to 0
  1623                           ; switch strategies available:
  1624                           ; Name         Instructions Cycles
  1625                           ; simple_byte            4     3 (average)
  1626                           ; direct_byte           11     8 (fixed)
  1627                           ; jumptable            260     6 (fixed)
  1628                           ;	Chosen strategy is simple_byte
  1629     016E  082B               	movf	(??_sprintf+1)^(0+128),w
  1630     016F  3A00               	xorlw	0	; case 0
  1631     0170  1903               	skipnz
  1632     0171  2973               	goto	l2197
  1633     0172  2A29               	goto	l2093
  1634     0173                     l2197:
  1635                           
  1636                           ; Switch size 1, requested type "simple"
  1637                           ; Number of cases is 3, Range of values is 0 to 105
  1638                           ; switch strategies available:
  1639                           ; Name         Instructions Cycles
  1640                           ; simple_byte           10     6 (average)
  1641                           ; jumptable            260     6 (fixed)
  1642                           ;	Chosen strategy is simple_byte
  1643     0173  082A               	movf	??_sprintf^(0+128),w
  1644     0174  3A00               	xorlw	0	; case 0
  1645     0175  1903               	skipnz
  1646     0176  2A39               	goto	l2095
  1647     0177  3A64               	xorlw	100	; case 100
  1648     0178  1903               	skipnz
  1649     0179  297E               	goto	l2053
  1650     017A  3A0D               	xorlw	13	; case 105
  1651     017B  1903               	skipnz
  1652     017C  297E               	goto	l2053
  1653     017D  2A29               	goto	l2093
  1654     017E                     l2053:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1657     017E  082D               	movf	sprintf@ap^(0+128),w
  1658     017F  0084               	movwf	4
  1659     0180  1383               	bcf	3,7	;select IRP bank0
  1660     0181  0800               	movf	0,w
  1661     0182  00B0               	movwf	sprintf@val^(0+128)
  1662     0183  0A84               	incf	4,f
  1663     0184  0800               	movf	0,w
  1664     0185  00B1               	movwf	(sprintf@val+1)^(0+128)
  1665     0186                     l2055:
  1666     0186  3002               	movlw	2
  1667     0187  00FF               	movwf	btemp+1
  1668     0188  087F               	movf	btemp+1,w
  1669     0189  07AD               	addwf	sprintf@ap^(0+128),f
  1670     018A                     l2057:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1673     018A  1FB1               	btfss	(sprintf@val+1)^(0+128),7
  1674     018B  298D               	goto	u1471
  1675     018C  298E               	goto	u1470
  1676     018D                     u1471:
  1677     018D  2997               	goto	l2063
  1678     018E                     u1470:
  1679     018E                     l2059:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1682     018E  3003               	movlw	3
  1683     018F  00FF               	movwf	btemp+1
  1684     0190  087F               	movf	btemp+1,w
  1685     0191  04AE               	iorwf	sprintf@flag^(0+128),f
  1686     0192                     l2061:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1689     0192  09B0               	comf	sprintf@val^(0+128),f
  1690     0193  09B1               	comf	(sprintf@val+1)^(0+128),f
  1691     0194  0AB0               	incf	sprintf@val^(0+128),f
  1692     0195  1903               	skipnz
  1693     0196  0AB1               	incf	(sprintf@val+1)^(0+128),f
  1694     0197                     l2063:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1697     0197  01B2               	clrf	sprintf@c^(0+128)
  1698     0198  0AB2               	incf	sprintf@c^(0+128),f
  1699     0199                     l2069:
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1702     0199  0832               	movf	sprintf@c^(0+128),w
  1703     019A  00AA               	movwf	??_sprintf^(0+128)
  1704     019B  072A               	addwf	??_sprintf^(0+128),w
  1705     019C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1706     019D  0084               	movwf	4
  1707     019E  120A  118A  260A  120A  118A  	fcall	stringdir
  1708     01A3  00AB               	movwf	(??_sprintf+1)^(0+128)
  1709     01A4  120A  118A  260A  120A  118A  	fcall	stringdir
  1710     01A9  00AC               	movwf	((??_sprintf+1)^(0+128)+1)
  1711     01AA  082C               	movf	(??_sprintf+2)^(0+128),w
  1712     01AB  0231               	subwf	(sprintf@val+1)^(0+128),w
  1713     01AC  1D03               	skipz
  1714     01AD  29B0               	goto	u1485
  1715     01AE  082B               	movf	(??_sprintf+1)^(0+128),w
  1716     01AF  0230               	subwf	sprintf@val^(0+128),w
  1717     01B0                     u1485:
  1718     01B0  1803               	skipnc
  1719     01B1  29B3               	goto	u1481
  1720     01B2  29B4               	goto	u1480
  1721     01B3                     u1481:
  1722     01B3  29B5               	goto	l2073
  1723     01B4                     u1480:
  1724     01B4  29BF               	goto	l2077
  1725     01B5                     l2073:
  1726     01B5  3001               	movlw	1
  1727     01B6  00FF               	movwf	btemp+1
  1728     01B7  087F               	movf	btemp+1,w
  1729     01B8  07B2               	addwf	sprintf@c^(0+128),f
  1730     01B9                     l2075:
  1731     01B9  3005               	movlw	5
  1732     01BA  0632               	xorwf	sprintf@c^(0+128),w
  1733     01BB  1D03               	btfss	3,2
  1734     01BC  29BE               	goto	u1491
  1735     01BD  29BF               	goto	u1490
  1736     01BE                     u1491:
  1737     01BE  2999               	goto	l2069
  1738     01BF                     u1490:
  1739     01BF                     l2077:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1742     01BF  082E               	movf	sprintf@flag^(0+128),w
  1743     01C0  3903               	andlw	3
  1744     01C1  1903               	btfsc	3,2
  1745     01C2  29C4               	goto	u1501
  1746     01C3  29C5               	goto	u1500
  1747     01C4                     u1501:
  1748     01C4  29D2               	goto	l2083
  1749     01C5                     u1500:
  1750     01C5                     l2079:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1753     01C5  0825               	movf	sprintf@sp^(0+128),w
  1754     01C6  0084               	movwf	4
  1755     01C7  1783               	bsf	3,7
  1756     01C8  1C26               	btfss	(sprintf@sp+1)^(0+128),0
  1757     01C9  1383               	bcf	3,7
  1758     01CA  302D               	movlw	45
  1759     01CB  0080               	movwf	0
  1760     01CC                     l2081:
  1761     01CC  3001               	movlw	1
  1762     01CD  07A5               	addwf	sprintf@sp^(0+128),f
  1763     01CE  1803               	skipnc
  1764     01CF  0AA6               	incf	(sprintf@sp+1)^(0+128),f
  1765     01D0  3000               	movlw	0
  1766     01D1  07A6               	addwf	(sprintf@sp+1)^(0+128),f
  1767     01D2                     l2083:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1770     01D2  0832               	movf	sprintf@c^(0+128),w
  1771     01D3  00AF               	movwf	sprintf@prec^(0+128)
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1774     01D4  2A20               	goto	l2091
  1775     01D5                     l2085:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1778     01D5  300A               	movlw	10
  1779     01D6  00A0               	movwf	___lwmod@divisor^(0+128)
  1780     01D7  3000               	movlw	0
  1781     01D8  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1782     01D9  082F               	movf	sprintf@prec^(0+128),w
  1783     01DA  00AA               	movwf	??_sprintf^(0+128)
  1784     01DB  072A               	addwf	??_sprintf^(0+128),w
  1785     01DC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1786     01DD  0084               	movwf	4
  1787     01DE  120A  118A  260A  120A  118A  	fcall	stringdir
  1788     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1789     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1790     01E5  00C1               	movwf	___lwdiv@divisor
  1791     01E6  120A  118A  260A  120A  118A  	fcall	stringdir
  1792     01EB  00C2               	movwf	___lwdiv@divisor+1
  1793     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1794     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1795     01EE  0831               	movf	(sprintf@val+1)^(0+128),w
  1796     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1797     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1798     01F1  00C4               	movwf	___lwdiv@dividend+1
  1799     01F2  1683               	bsf	3,5	;RP0=1, select bank1
  1800     01F3  1303               	bcf	3,6	;RP1=0, select bank1
  1801     01F4  0830               	movf	sprintf@val^(0+128),w
  1802     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1803     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1804     01F7  00C3               	movwf	___lwdiv@dividend
  1805     01F8  120A  118A  2573  120A  118A  	fcall	___lwdiv
  1806     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1807     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1808     01FF  0842               	movf	?___lwdiv+1,w
  1809     0200  1683               	bsf	3,5	;RP0=1, select bank1
  1810     0201  1303               	bcf	3,6	;RP1=0, select bank1
  1811     0202  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1812     0203  1283               	bcf	3,5	;RP0=0, select bank0
  1813     0204  1303               	bcf	3,6	;RP1=0, select bank0
  1814     0205  0841               	movf	?___lwdiv,w
  1815     0206  1683               	bsf	3,5	;RP0=1, select bank1
  1816     0207  1303               	bcf	3,6	;RP1=0, select bank1
  1817     0208  00A2               	movwf	___lwmod@dividend^(0+128)
  1818     0209  120A  118A  26BF  120A  118A  	fcall	___lwmod
  1819     020E  1683               	bsf	3,5	;RP0=1, select bank1
  1820     020F  1303               	bcf	3,6	;RP1=0, select bank1
  1821     0210  0820               	movf	?___lwmod^(0+128),w
  1822     0211  3E30               	addlw	48
  1823     0212  00B2               	movwf	sprintf@c^(0+128)
  1824     0213                     l2087:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1827     0213  0825               	movf	sprintf@sp^(0+128),w
  1828     0214  0084               	movwf	4
  1829     0215  1783               	bsf	3,7
  1830     0216  1C26               	btfss	(sprintf@sp+1)^(0+128),0
  1831     0217  1383               	bcf	3,7
  1832     0218  0832               	movf	sprintf@c^(0+128),w
  1833     0219  0080               	movwf	0
  1834     021A                     l2089:
  1835     021A  3001               	movlw	1
  1836     021B  07A5               	addwf	sprintf@sp^(0+128),f
  1837     021C  1803               	skipnc
  1838     021D  0AA6               	incf	(sprintf@sp+1)^(0+128),f
  1839     021E  3000               	movlw	0
  1840     021F  07A6               	addwf	(sprintf@sp+1)^(0+128),f
  1841     0220                     l2091:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1844     0220  30FF               	movlw	255
  1845     0221  00FF               	movwf	btemp+1
  1846     0222  087F               	movf	btemp+1,w
  1847     0223  07AF               	addwf	sprintf@prec^(0+128),f
  1848     0224  0A2F               	incf	sprintf@prec^(0+128),w
  1849     0225  1D03               	btfss	3,2
  1850     0226  2A28               	goto	u1511
  1851     0227  2A29               	goto	u1510
  1852     0228                     u1511:
  1853     0228  29D5               	goto	l2085
  1854     0229                     u1510:
  1855     0229                     l2093:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1858     0229  3001               	movlw	1
  1859     022A  07A7               	addwf	sprintf@f^(0+128),f
  1860     022B  30FF               	movlw	-1
  1861     022C  0727               	addwf	sprintf@f^(0+128),w
  1862     022D  0084               	movwf	4
  1863     022E  120A  118A  260A  120A  118A  	fcall	stringdir
  1864     0233  00B2               	movwf	sprintf@c^(0+128)
  1865     0234  0832               	movf	sprintf@c^(0+128),w
  1866     0235  1D03               	btfss	3,2
  1867     0236  2A38               	goto	u1521
  1868     0237  2A39               	goto	u1520
  1869     0238                     u1521:
  1870     0238  294C               	goto	l2041
  1871     0239                     u1520:
  1872     0239                     l2095:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1875     0239  0825               	movf	sprintf@sp^(0+128),w
  1876     023A  0084               	movwf	4
  1877     023B  1783               	bsf	3,7
  1878     023C  1C26               	btfss	(sprintf@sp+1)^(0+128),0
  1879     023D  1383               	bcf	3,7
  1880     023E  0180               	clrf	0
  1881     023F                     l359:
  1882     023F  0008               	return
  1883     0240                     __end_of_sprintf:
  1884                           
  1885                           	psect	text2
  1886     06BF                     __ptext2:	
  1887 ;; *************** function ___lwmod *****************
  1888 ;; Defined at:
  1889 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  divisor         2    0[BANK1 ] unsigned int 
  1892 ;;  dividend        2    2[BANK1 ] unsigned int 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  counter         1    4[BANK1 ] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2    0[BANK1 ] unsigned int 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0, btemp+1
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       4       0       0
  1905 ;;      Locals:         0       0       1       0       0
  1906 ;;      Temps:          0       0       0       0       0
  1907 ;;      Totals:         0       0       5       0       0
  1908 ;;Total ram usage:        5 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 3
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_sprintf
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918     06BF                     ___lwmod:	
  1919                           ;psect for function ___lwmod
  1920                           
  1921     06BF                     l1985:	
  1922                           ;incstack = 0
  1923                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1924                           
  1925     06BF  1683               	bsf	3,5	;RP0=1, select bank1
  1926     06C0  1303               	bcf	3,6	;RP1=0, select bank1
  1927     06C1  0820               	movf	___lwmod@divisor^(0+128),w
  1928     06C2  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  1929     06C3  1903               	btfsc	3,2
  1930     06C4  2EC6               	goto	u1351
  1931     06C5  2EC7               	goto	u1350
  1932     06C6                     u1351:
  1933     06C6  2EF6               	goto	l2003
  1934     06C7                     u1350:
  1935     06C7                     l1987:
  1936     06C7  01A4               	clrf	___lwmod@counter^(0+128)
  1937     06C8  0AA4               	incf	___lwmod@counter^(0+128),f
  1938     06C9  2ED5               	goto	l1993
  1939     06CA                     l1989:
  1940     06CA  3001               	movlw	1
  1941     06CB                     u1365:
  1942     06CB  1003               	clrc
  1943     06CC  0DA0               	rlf	___lwmod@divisor^(0+128),f
  1944     06CD  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  1945     06CE  3EFF               	addlw	-1
  1946     06CF  1D03               	skipz
  1947     06D0  2ECB               	goto	u1365
  1948     06D1                     l1991:
  1949     06D1  3001               	movlw	1
  1950     06D2  00FF               	movwf	btemp+1
  1951     06D3  087F               	movf	btemp+1,w
  1952     06D4  07A4               	addwf	___lwmod@counter^(0+128),f
  1953     06D5                     l1993:
  1954     06D5  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  1955     06D6  2ED8               	goto	u1371
  1956     06D7  2ED9               	goto	u1370
  1957     06D8                     u1371:
  1958     06D8  2ECA               	goto	l1989
  1959     06D9                     u1370:
  1960     06D9                     l1995:
  1961     06D9  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  1962     06DA  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  1963     06DB  1D03               	skipz
  1964     06DC  2EDF               	goto	u1385
  1965     06DD  0820               	movf	___lwmod@divisor^(0+128),w
  1966     06DE  0222               	subwf	___lwmod@dividend^(0+128),w
  1967     06DF                     u1385:
  1968     06DF  1C03               	skipc
  1969     06E0  2EE2               	goto	u1381
  1970     06E1  2EE3               	goto	u1380
  1971     06E2                     u1381:
  1972     06E2  2EE9               	goto	l1999
  1973     06E3                     u1380:
  1974     06E3                     l1997:
  1975     06E3  0820               	movf	___lwmod@divisor^(0+128),w
  1976     06E4  02A2               	subwf	___lwmod@dividend^(0+128),f
  1977     06E5  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  1978     06E6  1C03               	skipc
  1979     06E7  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  1980     06E8  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  1981     06E9                     l1999:
  1982     06E9  3001               	movlw	1
  1983     06EA                     u1395:
  1984     06EA  1003               	clrc
  1985     06EB  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  1986     06EC  0CA0               	rrf	___lwmod@divisor^(0+128),f
  1987     06ED  3EFF               	addlw	-1
  1988     06EE  1D03               	skipz
  1989     06EF  2EEA               	goto	u1395
  1990     06F0                     l2001:
  1991     06F0  3001               	movlw	1
  1992     06F1  02A4               	subwf	___lwmod@counter^(0+128),f
  1993     06F2  1D03               	btfss	3,2
  1994     06F3  2EF5               	goto	u1401
  1995     06F4  2EF6               	goto	u1400
  1996     06F5                     u1401:
  1997     06F5  2ED9               	goto	l1995
  1998     06F6                     u1400:
  1999     06F6                     l2003:
  2000     06F6  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  2001     06F7  00A1               	movwf	(?___lwmod+1)^(0+128)
  2002     06F8  0822               	movf	___lwmod@dividend^(0+128),w
  2003     06F9  00A0               	movwf	?___lwmod^(0+128)
  2004     06FA                     l645:
  2005     06FA  0008               	return
  2006     06FB                     __end_of___lwmod:
  2007                           
  2008                           	psect	text3
  2009     0573                     __ptext3:	
  2010 ;; *************** function ___lwdiv *****************
  2011 ;; Defined at:
  2012 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  divisor         2   33[BANK0 ] unsigned int 
  2015 ;;  dividend        2   35[BANK0 ] unsigned int 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  quotient        2   37[BANK0 ] unsigned int 
  2018 ;;  counter         1   39[BANK0 ] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  2   33[BANK0 ] unsigned int 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, btemp+1
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       4       0       0       0
  2029 ;;      Locals:         0       3       0       0       0
  2030 ;;      Temps:          0       0       0       0       0
  2031 ;;      Totals:         0       7       0       0       0
  2032 ;;Total ram usage:        7 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 3
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_sprintf
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042     0573                     ___lwdiv:	
  2043                           ;psect for function ___lwdiv
  2044                           
  2045     0573                     l1611:	
  2046                           ;incstack = 0
  2047                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2048                           
  2049     0573  1283               	bcf	3,5	;RP0=0, select bank0
  2050     0574  1303               	bcf	3,6	;RP1=0, select bank0
  2051     0575  01C5               	clrf	___lwdiv@quotient
  2052     0576  01C6               	clrf	___lwdiv@quotient+1
  2053     0577                     l1613:
  2054     0577  0841               	movf	___lwdiv@divisor,w
  2055     0578  0442               	iorwf	___lwdiv@divisor+1,w
  2056     0579  1903               	btfsc	3,2
  2057     057A  2D7C               	goto	u961
  2058     057B  2D7D               	goto	u960
  2059     057C                     u961:
  2060     057C  2DB4               	goto	l1633
  2061     057D                     u960:
  2062     057D                     l1615:
  2063     057D  01C7               	clrf	___lwdiv@counter
  2064     057E  0AC7               	incf	___lwdiv@counter,f
  2065     057F  2D8B               	goto	l1621
  2066     0580                     l1617:
  2067     0580  3001               	movlw	1
  2068     0581                     u975:
  2069     0581  1003               	clrc
  2070     0582  0DC1               	rlf	___lwdiv@divisor,f
  2071     0583  0DC2               	rlf	___lwdiv@divisor+1,f
  2072     0584  3EFF               	addlw	-1
  2073     0585  1D03               	skipz
  2074     0586  2D81               	goto	u975
  2075     0587                     l1619:
  2076     0587  3001               	movlw	1
  2077     0588  00FF               	movwf	btemp+1
  2078     0589  087F               	movf	btemp+1,w
  2079     058A  07C7               	addwf	___lwdiv@counter,f
  2080     058B                     l1621:
  2081     058B  1FC2               	btfss	___lwdiv@divisor+1,7
  2082     058C  2D8E               	goto	u981
  2083     058D  2D8F               	goto	u980
  2084     058E                     u981:
  2085     058E  2D80               	goto	l1617
  2086     058F                     u980:
  2087     058F                     l1623:
  2088     058F  3001               	movlw	1
  2089     0590                     u995:
  2090     0590  1003               	clrc
  2091     0591  0DC5               	rlf	___lwdiv@quotient,f
  2092     0592  0DC6               	rlf	___lwdiv@quotient+1,f
  2093     0593  3EFF               	addlw	-1
  2094     0594  1D03               	skipz
  2095     0595  2D90               	goto	u995
  2096     0596  0842               	movf	___lwdiv@divisor+1,w
  2097     0597  0244               	subwf	___lwdiv@dividend+1,w
  2098     0598  1D03               	skipz
  2099     0599  2D9C               	goto	u1005
  2100     059A  0841               	movf	___lwdiv@divisor,w
  2101     059B  0243               	subwf	___lwdiv@dividend,w
  2102     059C                     u1005:
  2103     059C  1C03               	skipc
  2104     059D  2D9F               	goto	u1001
  2105     059E  2DA0               	goto	u1000
  2106     059F                     u1001:
  2107     059F  2DA7               	goto	l1629
  2108     05A0                     u1000:
  2109     05A0                     l1625:
  2110     05A0  0841               	movf	___lwdiv@divisor,w
  2111     05A1  02C3               	subwf	___lwdiv@dividend,f
  2112     05A2  0842               	movf	___lwdiv@divisor+1,w
  2113     05A3  1C03               	skipc
  2114     05A4  03C4               	decf	___lwdiv@dividend+1,f
  2115     05A5  02C4               	subwf	___lwdiv@dividend+1,f
  2116     05A6                     l1627:
  2117     05A6  1445               	bsf	___lwdiv@quotient,0
  2118     05A7                     l1629:
  2119     05A7  3001               	movlw	1
  2120     05A8                     u1015:
  2121     05A8  1003               	clrc
  2122     05A9  0CC2               	rrf	___lwdiv@divisor+1,f
  2123     05AA  0CC1               	rrf	___lwdiv@divisor,f
  2124     05AB  3EFF               	addlw	-1
  2125     05AC  1D03               	skipz
  2126     05AD  2DA8               	goto	u1015
  2127     05AE                     l1631:
  2128     05AE  3001               	movlw	1
  2129     05AF  02C7               	subwf	___lwdiv@counter,f
  2130     05B0  1D03               	btfss	3,2
  2131     05B1  2DB3               	goto	u1021
  2132     05B2  2DB4               	goto	u1020
  2133     05B3                     u1021:
  2134     05B3  2D8F               	goto	l1623
  2135     05B4                     u1020:
  2136     05B4                     l1633:
  2137     05B4  0846               	movf	___lwdiv@quotient+1,w
  2138     05B5  00C2               	movwf	?___lwdiv+1
  2139     05B6  0845               	movf	___lwdiv@quotient,w
  2140     05B7  00C1               	movwf	?___lwdiv
  2141     05B8                     l635:
  2142     05B8  0008               	return
  2143     05B9                     __end_of___lwdiv:
  2144                           
  2145                           	psect	text4
  2146     04E4                     __ptext4:	
  2147 ;; *************** function _setup *****************
  2148 ;; Defined at:
  2149 ;;		line 130 in file "Lab_2_main.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 4
  2170 ;; This function calls:
  2171 ;;		_UART_RX_config
  2172 ;;		_UART_TX_config
  2173 ;;		_adc_init
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179     04E4                     _setup:	
  2180                           ;psect for function _setup
  2181                           
  2182     04E4                     l1717:	
  2183                           ;incstack = 0
  2184                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2185                           
  2186                           
  2187                           ;Lab_2_main.c: 132:     TRISA = 0b00000011;
  2188     04E4  3003               	movlw	3
  2189     04E5  1683               	bsf	3,5	;RP0=1, select bank1
  2190     04E6  1303               	bcf	3,6	;RP1=0, select bank1
  2191     04E7  0085               	movwf	5	;volatile
  2192     04E8                     l1719:
  2193                           
  2194                           ;Lab_2_main.c: 133:     TRISB = 0;
  2195     04E8  0186               	clrf	6	;volatile
  2196     04E9                     l1721:
  2197                           
  2198                           ;Lab_2_main.c: 134:     TRISD = 0;
  2199     04E9  0188               	clrf	8	;volatile
  2200                           
  2201                           ;Lab_2_main.c: 135:     TRISC = 0xFF;
  2202     04EA  30FF               	movlw	255
  2203     04EB  0087               	movwf	7	;volatile
  2204     04EC                     l1723:
  2205                           
  2206                           ;Lab_2_main.c: 136:     TRISE = 0;
  2207     04EC  0189               	clrf	9	;volatile
  2208     04ED                     l1725:
  2209                           
  2210                           ;Lab_2_main.c: 138:     PORTA = 0;
  2211     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2212     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2213     04EF  0185               	clrf	5	;volatile
  2214     04F0                     l1727:
  2215                           
  2216                           ;Lab_2_main.c: 139:     PORTB = 0;
  2217     04F0  0186               	clrf	6	;volatile
  2218     04F1                     l1729:
  2219                           
  2220                           ;Lab_2_main.c: 140:     PORTC = 0;
  2221     04F1  0187               	clrf	7	;volatile
  2222     04F2                     l1731:
  2223                           
  2224                           ;Lab_2_main.c: 141:     PORTD = 0;
  2225     04F2  0188               	clrf	8	;volatile
  2226     04F3                     l1733:
  2227                           
  2228                           ;Lab_2_main.c: 142:     PORTE = 0;
  2229     04F3  0189               	clrf	9	;volatile
  2230                           
  2231                           ;Lab_2_main.c: 144:     ANSEL = 0b00000011;
  2232     04F4  3003               	movlw	3
  2233     04F5  1683               	bsf	3,5	;RP0=1, select bank3
  2234     04F6  1703               	bsf	3,6	;RP1=1, select bank3
  2235     04F7  0088               	movwf	8	;volatile
  2236     04F8                     l1735:
  2237                           
  2238                           ;Lab_2_main.c: 145:     ANSELH= 0;
  2239     04F8  0189               	clrf	9	;volatile
  2240     04F9                     l1737:
  2241                           
  2242                           ;Lab_2_main.c: 147:     OSCCONbits.IRCF =0b111;
  2243     04F9  3070               	movlw	112
  2244     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2245     04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2246     04FC  048F               	iorwf	15,f	;volatile
  2247     04FD                     l1739:
  2248                           
  2249                           ;Lab_2_main.c: 148:     OSCCONbits.SCS = 1;
  2250     04FD  140F               	bsf	15,0	;volatile
  2251     04FE                     l1741:
  2252                           
  2253                           ;Lab_2_main.c: 150:     INTCONbits.GIE = 1;
  2254     04FE  178B               	bsf	11,7	;volatile
  2255     04FF                     l1743:
  2256                           
  2257                           ;Lab_2_main.c: 151:     INTCONbits.PEIE = 1;
  2258     04FF  170B               	bsf	11,6	;volatile
  2259     0500                     l1745:
  2260                           
  2261                           ;Lab_2_main.c: 152:     INTCONbits.T0IE = 1;
  2262     0500  168B               	bsf	11,5	;volatile
  2263     0501                     l1747:
  2264                           
  2265                           ;Lab_2_main.c: 153:     INTCONbits.T0IF = 0;
  2266     0501  110B               	bcf	11,2	;volatile
  2267     0502                     l1749:
  2268                           
  2269                           ;Lab_2_main.c: 154:     PIE1bits.ADIE = 1;
  2270     0502  170C               	bsf	12,6	;volatile
  2271     0503                     l1751:
  2272                           
  2273                           ;Lab_2_main.c: 155:     PIR1bits.ADIF = 0;
  2274     0503  1283               	bcf	3,5	;RP0=0, select bank0
  2275     0504  1303               	bcf	3,6	;RP1=0, select bank0
  2276     0505  130C               	bcf	12,6	;volatile
  2277     0506                     l1753:
  2278                           
  2279                           ;Lab_2_main.c: 156:     PIE1bits.RCIE = 1;
  2280     0506  1683               	bsf	3,5	;RP0=1, select bank1
  2281     0507  1303               	bcf	3,6	;RP1=0, select bank1
  2282     0508  168C               	bsf	12,5	;volatile
  2283     0509                     l1755:
  2284                           
  2285                           ;Lab_2_main.c: 157:     PIR1bits.RCIF = 0;
  2286     0509  1283               	bcf	3,5	;RP0=0, select bank0
  2287     050A  1303               	bcf	3,6	;RP1=0, select bank0
  2288     050B  128C               	bcf	12,5	;volatile
  2289     050C                     l1757:
  2290                           
  2291                           ;Lab_2_main.c: 159:     adc_init(1);
  2292     050C  3001               	movlw	1
  2293     050D  00C1               	movwf	adc_init@channel
  2294     050E  3000               	movlw	0
  2295     050F  00C2               	movwf	adc_init@channel+1
  2296     0510  120A  118A  2371  120A  118A  	fcall	_adc_init
  2297     0515                     l1759:
  2298                           
  2299                           ;Lab_2_main.c: 160:     UART_RX_config(9600);
  2300     0515  3080               	movlw	128
  2301     0516  1283               	bcf	3,5	;RP0=0, select bank0
  2302     0517  1303               	bcf	3,6	;RP1=0, select bank0
  2303     0518  00C1               	movwf	UART_RX_config@baudrate
  2304     0519  3025               	movlw	37
  2305     051A  00C2               	movwf	UART_RX_config@baudrate+1
  2306     051B  120A  118A  2643  120A  118A  	fcall	_UART_RX_config
  2307     0520                     l1761:
  2308                           
  2309                           ;Lab_2_main.c: 161:     UART_TX_config(9600);
  2310     0520  3080               	movlw	128
  2311     0521  1283               	bcf	3,5	;RP0=0, select bank0
  2312     0522  1303               	bcf	3,6	;RP1=0, select bank0
  2313     0523  00C1               	movwf	UART_TX_config@baudrate
  2314     0524  3025               	movlw	37
  2315     0525  00C2               	movwf	UART_TX_config@baudrate+1
  2316     0526  120A  118A  2682  120A  118A  	fcall	_UART_TX_config
  2317     052B                     l249:
  2318     052B  0008               	return
  2319     052C                     __end_of_setup:
  2320                           
  2321                           	psect	text5
  2322     0371                     __ptext5:	
  2323 ;; *************** function _adc_init *****************
  2324 ;; Defined at:
  2325 ;;		line 4 in file "ADC.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  channel         2   33[BANK0 ] int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       2       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          0       2       0       0       0
  2342 ;;      Totals:         0       4       0       0       0
  2343 ;;Total ram usage:        4 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 3
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_setup
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353     0371                     _adc_init:	
  2354                           ;psect for function _adc_init
  2355                           
  2356     0371                     l1427:	
  2357                           ;incstack = 0
  2358                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  2359                           
  2360                           
  2361                           ;ADC.c: 4: void adc_init(int channel);ADC.c: 5: {;ADC.c: 7:     ADCON0bits.ADON = 1;
  2362     0371  1283               	bcf	3,5	;RP0=0, select bank0
  2363     0372  1303               	bcf	3,6	;RP1=0, select bank0
  2364     0373  141F               	bsf	31,0	;volatile
  2365     0374                     l1429:
  2366                           
  2367                           ;ADC.c: 9:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2368     0374  3003               	movlw	3
  2369     0375  1283               	bcf	3,5	;RP0=0, select bank0
  2370     0376  1303               	bcf	3,6	;RP1=0, select bank0
  2371     0377  00C4               	movwf	??_adc_init+1
  2372     0378  3097               	movlw	151
  2373     0379  00C3               	movwf	??_adc_init
  2374     037A                     u1617:
  2375     037A  0BC3               	decfsz	??_adc_init,f
  2376     037B  2B7A               	goto	u1617
  2377     037C  0BC4               	decfsz	??_adc_init+1,f
  2378     037D  2B7A               	goto	u1617
  2379     037E                     l1431:
  2380                           
  2381                           ;ADC.c: 11:       if(channel == 0)
  2382     037E  1283               	bcf	3,5	;RP0=0, select bank0
  2383     037F  1303               	bcf	3,6	;RP1=0, select bank0
  2384     0380  0841               	movf	adc_init@channel,w
  2385     0381  0442               	iorwf	adc_init@channel+1,w
  2386     0382  1D03               	btfss	3,2
  2387     0383  2B85               	goto	u681
  2388     0384  2B86               	goto	u680
  2389     0385                     u681:
  2390     0385  2B89               	goto	l1435
  2391     0386                     u680:
  2392     0386                     l1433:
  2393                           
  2394                           ;ADC.c: 12:           ADCON0bits.CHS = 0b0000;
  2395     0386  30C3               	movlw	-61
  2396     0387  059F               	andwf	31,f	;volatile
  2397     0388  2BD0               	goto	l1459
  2398     0389                     l1435:
  2399     0389  0341               	decf	adc_init@channel,w
  2400     038A  0442               	iorwf	adc_init@channel+1,w
  2401     038B  1D03               	btfss	3,2
  2402     038C  2B8E               	goto	u691
  2403     038D  2B8F               	goto	u690
  2404     038E                     u691:
  2405     038E  2B94               	goto	l1439
  2406     038F                     u690:
  2407     038F                     l1437:
  2408                           
  2409                           ;ADC.c: 14:           ADCON0bits.CHS = 0b0001;
  2410     038F  081F               	movf	31,w	;volatile
  2411     0390  39C3               	andlw	-61
  2412     0391  3804               	iorlw	4
  2413     0392  009F               	movwf	31	;volatile
  2414     0393  2BD0               	goto	l1459
  2415     0394                     l1439:
  2416     0394  3002               	movlw	2
  2417     0395  0641               	xorwf	adc_init@channel,w
  2418     0396  0442               	iorwf	adc_init@channel+1,w
  2419     0397  1D03               	btfss	3,2
  2420     0398  2B9A               	goto	u701
  2421     0399  2B9B               	goto	u700
  2422     039A                     u701:
  2423     039A  2BA0               	goto	l1443
  2424     039B                     u700:
  2425     039B                     l1441:
  2426                           
  2427                           ;ADC.c: 16:           ADCON0bits.CHS = 0b0010;
  2428     039B  081F               	movf	31,w	;volatile
  2429     039C  39C3               	andlw	-61
  2430     039D  3808               	iorlw	8
  2431     039E  009F               	movwf	31	;volatile
  2432     039F  2BD0               	goto	l1459
  2433     03A0                     l1443:
  2434     03A0  3003               	movlw	3
  2435     03A1  0641               	xorwf	adc_init@channel,w
  2436     03A2  0442               	iorwf	adc_init@channel+1,w
  2437     03A3  1D03               	btfss	3,2
  2438     03A4  2BA6               	goto	u711
  2439     03A5  2BA7               	goto	u710
  2440     03A6                     u711:
  2441     03A6  2BAC               	goto	l1447
  2442     03A7                     u710:
  2443     03A7                     l1445:
  2444                           
  2445                           ;ADC.c: 18:           ADCON0bits.CHS = 0b0011;
  2446     03A7  081F               	movf	31,w	;volatile
  2447     03A8  39C3               	andlw	-61
  2448     03A9  380C               	iorlw	12
  2449     03AA  009F               	movwf	31	;volatile
  2450     03AB  2BD0               	goto	l1459
  2451     03AC                     l1447:
  2452     03AC  3004               	movlw	4
  2453     03AD  0641               	xorwf	adc_init@channel,w
  2454     03AE  0442               	iorwf	adc_init@channel+1,w
  2455     03AF  1D03               	btfss	3,2
  2456     03B0  2BB2               	goto	u721
  2457     03B1  2BB3               	goto	u720
  2458     03B2                     u721:
  2459     03B2  2BB8               	goto	l1451
  2460     03B3                     u720:
  2461     03B3                     l1449:
  2462                           
  2463                           ;ADC.c: 20:           ADCON0bits.CHS = 0b0100;
  2464     03B3  081F               	movf	31,w	;volatile
  2465     03B4  39C3               	andlw	-61
  2466     03B5  3810               	iorlw	16
  2467     03B6  009F               	movwf	31	;volatile
  2468     03B7  2BD0               	goto	l1459
  2469     03B8                     l1451:
  2470     03B8  3005               	movlw	5
  2471     03B9  0641               	xorwf	adc_init@channel,w
  2472     03BA  0442               	iorwf	adc_init@channel+1,w
  2473     03BB  1D03               	btfss	3,2
  2474     03BC  2BBE               	goto	u731
  2475     03BD  2BBF               	goto	u730
  2476     03BE                     u731:
  2477     03BE  2BC4               	goto	l1455
  2478     03BF                     u730:
  2479     03BF                     l1453:
  2480                           
  2481                           ;ADC.c: 22:           ADCON0bits.CHS = 0b0101;
  2482     03BF  081F               	movf	31,w	;volatile
  2483     03C0  39C3               	andlw	-61
  2484     03C1  3814               	iorlw	20
  2485     03C2  009F               	movwf	31	;volatile
  2486     03C3  2BD0               	goto	l1459
  2487     03C4                     l1455:
  2488     03C4  3006               	movlw	6
  2489     03C5  0641               	xorwf	adc_init@channel,w
  2490     03C6  0442               	iorwf	adc_init@channel+1,w
  2491     03C7  1D03               	btfss	3,2
  2492     03C8  2BCA               	goto	u741
  2493     03C9  2BCB               	goto	u740
  2494     03CA                     u741:
  2495     03CA  2BD0               	goto	l22
  2496     03CB                     u740:
  2497     03CB                     l1457:
  2498                           
  2499                           ;ADC.c: 24:           ADCON0bits.CHS = 0b0110;
  2500     03CB  081F               	movf	31,w	;volatile
  2501     03CC  39C3               	andlw	-61
  2502     03CD  3818               	iorlw	24
  2503     03CE  009F               	movwf	31	;volatile
  2504     03CF  2BD0               	goto	l1459
  2505     03D0                     l22:
  2506     03D0                     l1459:
  2507                           
  2508                           ;ADC.c: 27:     ADCON1bits.VCFG1 = 0;
  2509     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2510     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2511     03D2  129F               	bcf	31,5	;volatile
  2512     03D3                     l1461:
  2513                           
  2514                           ;ADC.c: 28:     ADCON1bits.VCFG0 = 0;
  2515     03D3  121F               	bcf	31,4	;volatile
  2516     03D4                     l1463:
  2517                           
  2518                           ;ADC.c: 31:     PIE1bits.ADIE = 1;
  2519     03D4  170C               	bsf	12,6	;volatile
  2520     03D5                     l1465:
  2521                           
  2522                           ;ADC.c: 32:     ADIF = 0;
  2523     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2524     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2525     03D7  130C               	bcf	12,6	;volatile
  2526                           
  2527                           ;ADC.c: 34:     ADCON0bits.ADCS = 0b01;
  2528     03D8  081F               	movf	31,w	;volatile
  2529     03D9  393F               	andlw	-193
  2530     03DA  3840               	iorlw	64
  2531     03DB  009F               	movwf	31	;volatile
  2532     03DC                     l1467:
  2533                           
  2534                           ;ADC.c: 35:     ADCON1bits.ADFM = 0;
  2535     03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2536     03DD  1303               	bcf	3,6	;RP1=0, select bank1
  2537     03DE  139F               	bcf	31,7	;volatile
  2538     03DF                     l28:
  2539     03DF  0008               	return
  2540     03E0                     __end_of_adc_init:
  2541                           
  2542                           	psect	text6
  2543     0682                     __ptext6:	
  2544 ;; *************** function _UART_TX_config *****************
  2545 ;; Defined at:
  2546 ;;		line 39 in file "UART.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  baudrate        2   33[BANK0 ] unsigned int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0       2       0       0       0
  2561 ;;      Locals:         0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0
  2563 ;;      Totals:         0       2       0       0       0
  2564 ;;Total ram usage:        2 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 3
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_setup
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574     0682                     _UART_TX_config:	
  2575                           ;psect for function _UART_TX_config
  2576                           
  2577     0682                     l1525:	
  2578                           ;incstack = 0
  2579                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0]
  2580                           
  2581                           
  2582                           ;UART.c: 39: void UART_TX_config (uint16_t baudrate);UART.c: 40: {;UART.c: 41:     TXSTA
      +                          bits.BRGH = 0;
  2583     0682  1683               	bsf	3,5	;RP0=1, select bank1
  2584     0683  1303               	bcf	3,6	;RP1=0, select bank1
  2585     0684  1118               	bcf	24,2	;volatile
  2586                           
  2587                           ;UART.c: 42:     BAUDCTLbits.BRG16 = 0;
  2588     0685  1683               	bsf	3,5	;RP0=1, select bank3
  2589     0686  1703               	bsf	3,6	;RP1=1, select bank3
  2590     0687  1187               	bcf	7,3	;volatile
  2591     0688                     l1527:
  2592                           
  2593                           ;UART.c: 44:     if (baudrate == 1200)
  2594     0688  30B0               	movlw	176
  2595     0689  1283               	bcf	3,5	;RP0=0, select bank0
  2596     068A  1303               	bcf	3,6	;RP1=0, select bank0
  2597     068B  0641               	xorwf	UART_TX_config@baudrate,w
  2598     068C  3004               	movlw	4
  2599     068D  1903               	skipnz
  2600     068E  0642               	xorwf	UART_TX_config@baudrate+1,w
  2601     068F  1D03               	btfss	3,2
  2602     0690  2E92               	goto	u781
  2603     0691  2E93               	goto	u780
  2604     0692                     u781:
  2605     0692  2E99               	goto	l1533
  2606     0693                     u780:
  2607     0693                     l1529:
  2608                           
  2609                           ;UART.c: 45:     {;UART.c: 46:         SPBRG = 103;
  2610     0693  3067               	movlw	103
  2611     0694  1683               	bsf	3,5	;RP0=1, select bank1
  2612     0695  1303               	bcf	3,6	;RP1=0, select bank1
  2613     0696  0099               	movwf	25	;volatile
  2614     0697                     l1531:
  2615                           
  2616                           ;UART.c: 47:         SPBRGH = 0;
  2617     0697  019A               	clrf	26	;volatile
  2618                           
  2619                           ;UART.c: 48:     }
  2620     0698  2EB5               	goto	l1545
  2621     0699                     l1533:
  2622     0699  3060               	movlw	96
  2623     069A  0641               	xorwf	UART_TX_config@baudrate,w
  2624     069B  3009               	movlw	9
  2625     069C  1903               	skipnz
  2626     069D  0642               	xorwf	UART_TX_config@baudrate+1,w
  2627     069E  1D03               	btfss	3,2
  2628     069F  2EA1               	goto	u791
  2629     06A0  2EA2               	goto	u790
  2630     06A1                     u791:
  2631     06A1  2EA7               	goto	l1539
  2632     06A2                     u790:
  2633     06A2                     l1535:
  2634                           
  2635                           ;UART.c: 51:     {;UART.c: 52:         SPBRG = 51;
  2636     06A2  3033               	movlw	51
  2637     06A3  1683               	bsf	3,5	;RP0=1, select bank1
  2638     06A4  1303               	bcf	3,6	;RP1=0, select bank1
  2639     06A5  0099               	movwf	25	;volatile
  2640     06A6  2E97               	goto	l1531
  2641     06A7                     l1539:
  2642     06A7  3080               	movlw	128
  2643     06A8  0641               	xorwf	UART_TX_config@baudrate,w
  2644     06A9  3025               	movlw	37
  2645     06AA  1903               	skipnz
  2646     06AB  0642               	xorwf	UART_TX_config@baudrate+1,w
  2647     06AC  1D03               	btfss	3,2
  2648     06AD  2EAF               	goto	u801
  2649     06AE  2EB0               	goto	u800
  2650     06AF                     u801:
  2651     06AF  2EB5               	goto	l1545
  2652     06B0                     u800:
  2653     06B0                     l1541:
  2654                           
  2655                           ;UART.c: 56:     {;UART.c: 57:         SPBRG = 12;
  2656     06B0  300C               	movlw	12
  2657     06B1  1683               	bsf	3,5	;RP0=1, select bank1
  2658     06B2  1303               	bcf	3,6	;RP1=0, select bank1
  2659     06B3  0099               	movwf	25	;volatile
  2660     06B4  2E97               	goto	l1531
  2661     06B5                     l1545:
  2662                           
  2663                           ;UART.c: 61:     RCSTAbits.SPEN = 1;
  2664     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  2665     06B6  1798               	bsf	24,7	;volatile
  2666     06B7                     l1547:
  2667                           
  2668                           ;UART.c: 62:     TXSTAbits.SYNC = 0;
  2669     06B7  1683               	bsf	3,5	;RP0=1, select bank1
  2670     06B8  1303               	bcf	3,6	;RP1=0, select bank1
  2671     06B9  1218               	bcf	24,4	;volatile
  2672     06BA                     l1549:
  2673                           
  2674                           ;UART.c: 63:     TXSTAbits.TXEN = 1;
  2675     06BA  1698               	bsf	24,5	;volatile
  2676     06BB                     l1551:
  2677                           
  2678                           ;UART.c: 64:     PIR1bits.TXIF = 0;
  2679     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  2680     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  2681     06BD  120C               	bcf	12,4	;volatile
  2682     06BE                     l117:
  2683     06BE  0008               	return
  2684     06BF                     __end_of_UART_TX_config:
  2685                           
  2686                           	psect	text7
  2687     0643                     __ptext7:	
  2688 ;; *************** function _UART_RX_config *****************
  2689 ;; Defined at:
  2690 ;;		line 3 in file "UART.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  baudrate        2   33[BANK0 ] unsigned int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       2       0       0       0
  2705 ;;      Locals:         0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0
  2707 ;;      Totals:         0       2       0       0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 3
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_setup
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718     0643                     _UART_RX_config:	
  2719                           ;psect for function _UART_RX_config
  2720                           
  2721     0643                     l1491:	
  2722                           ;incstack = 0
  2723                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0]
  2724                           
  2725                           
  2726                           ;UART.c: 3: void UART_RX_config (uint16_t baudrate);UART.c: 4: {;UART.c: 5:     TXSTAbit
      +                          s.BRGH = 0;
  2727     0643  1683               	bsf	3,5	;RP0=1, select bank1
  2728     0644  1303               	bcf	3,6	;RP1=0, select bank1
  2729     0645  1118               	bcf	24,2	;volatile
  2730                           
  2731                           ;UART.c: 6:     BAUDCTLbits.BRG16 = 0;
  2732     0646  1683               	bsf	3,5	;RP0=1, select bank3
  2733     0647  1703               	bsf	3,6	;RP1=1, select bank3
  2734     0648  1187               	bcf	7,3	;volatile
  2735     0649                     l1493:
  2736                           
  2737                           ;UART.c: 9:     if (baudrate == 1200)
  2738     0649  30B0               	movlw	176
  2739     064A  1283               	bcf	3,5	;RP0=0, select bank0
  2740     064B  1303               	bcf	3,6	;RP1=0, select bank0
  2741     064C  0641               	xorwf	UART_RX_config@baudrate,w
  2742     064D  3004               	movlw	4
  2743     064E  1903               	skipnz
  2744     064F  0642               	xorwf	UART_RX_config@baudrate+1,w
  2745     0650  1D03               	btfss	3,2
  2746     0651  2E53               	goto	u751
  2747     0652  2E54               	goto	u750
  2748     0653                     u751:
  2749     0653  2E5A               	goto	l1499
  2750     0654                     u750:
  2751     0654                     l1495:
  2752                           
  2753                           ;UART.c: 10:     {;UART.c: 11:         SPBRG = 103;
  2754     0654  3067               	movlw	103
  2755     0655  1683               	bsf	3,5	;RP0=1, select bank1
  2756     0656  1303               	bcf	3,6	;RP1=0, select bank1
  2757     0657  0099               	movwf	25	;volatile
  2758     0658                     l1497:
  2759                           
  2760                           ;UART.c: 12:         SPBRGH = 0;
  2761     0658  019A               	clrf	26	;volatile
  2762                           
  2763                           ;UART.c: 13:     }
  2764     0659  2E76               	goto	l1511
  2765     065A                     l1499:
  2766     065A  3060               	movlw	96
  2767     065B  0641               	xorwf	UART_RX_config@baudrate,w
  2768     065C  3009               	movlw	9
  2769     065D  1903               	skipnz
  2770     065E  0642               	xorwf	UART_RX_config@baudrate+1,w
  2771     065F  1D03               	btfss	3,2
  2772     0660  2E62               	goto	u761
  2773     0661  2E63               	goto	u760
  2774     0662                     u761:
  2775     0662  2E68               	goto	l1505
  2776     0663                     u760:
  2777     0663                     l1501:
  2778                           
  2779                           ;UART.c: 16:     {;UART.c: 17:         SPBRG = 51;
  2780     0663  3033               	movlw	51
  2781     0664  1683               	bsf	3,5	;RP0=1, select bank1
  2782     0665  1303               	bcf	3,6	;RP1=0, select bank1
  2783     0666  0099               	movwf	25	;volatile
  2784     0667  2E58               	goto	l1497
  2785     0668                     l1505:
  2786     0668  3080               	movlw	128
  2787     0669  0641               	xorwf	UART_RX_config@baudrate,w
  2788     066A  3025               	movlw	37
  2789     066B  1903               	skipnz
  2790     066C  0642               	xorwf	UART_RX_config@baudrate+1,w
  2791     066D  1D03               	btfss	3,2
  2792     066E  2E70               	goto	u771
  2793     066F  2E71               	goto	u770
  2794     0670                     u771:
  2795     0670  2E76               	goto	l1511
  2796     0671                     u770:
  2797     0671                     l1507:
  2798                           
  2799                           ;UART.c: 21:     {;UART.c: 22:         SPBRG = 12;
  2800     0671  300C               	movlw	12
  2801     0672  1683               	bsf	3,5	;RP0=1, select bank1
  2802     0673  1303               	bcf	3,6	;RP1=0, select bank1
  2803     0674  0099               	movwf	25	;volatile
  2804     0675  2E58               	goto	l1497
  2805     0676                     l1511:
  2806                           
  2807                           ;UART.c: 26:     RCSTAbits.SPEN = 1;
  2808     0676  1283               	bcf	3,5	;RP0=0, select bank0
  2809     0677  1798               	bsf	24,7	;volatile
  2810     0678                     l1513:
  2811                           
  2812                           ;UART.c: 27:     TXSTAbits.SYNC = 0;
  2813     0678  1683               	bsf	3,5	;RP0=1, select bank1
  2814     0679  1303               	bcf	3,6	;RP1=0, select bank1
  2815     067A  1218               	bcf	24,4	;volatile
  2816     067B                     l1515:
  2817                           
  2818                           ;UART.c: 30:     PIE1bits.RCIE = 1;
  2819     067B  168C               	bsf	12,5	;volatile
  2820     067C                     l1517:
  2821                           
  2822                           ;UART.c: 31:     PIR1bits.RCIF = 1;
  2823     067C  1283               	bcf	3,5	;RP0=0, select bank0
  2824     067D  1303               	bcf	3,6	;RP1=0, select bank0
  2825     067E  168C               	bsf	12,5	;volatile
  2826     067F                     l1519:
  2827                           
  2828                           ;UART.c: 33:     RCSTAbits.RX9 = 0;
  2829     067F  1318               	bcf	24,6	;volatile
  2830     0680                     l1521:
  2831                           
  2832                           ;UART.c: 34:     RCSTAbits.CREN = 1;
  2833     0680  1618               	bsf	24,4	;volatile
  2834     0681                     l109:
  2835     0681  0008               	return
  2836     0682                     __end_of_UART_RX_config:
  2837                           
  2838                           	psect	text8
  2839     06FB                     __ptext8:	
  2840 ;; *************** function _UART_write_char *****************
  2841 ;; Defined at:
  2842 ;;		line 68 in file "UART.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  c               2   33[BANK0 ] PTR unsigned char 
  2845 ;;		 -> main@texto(71), STR_1(20), volt(4), 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       2       0       0       0
  2858 ;;      Locals:         0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0
  2860 ;;      Totals:         0       2       0       0       0
  2861 ;;Total ram usage:        2 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 3
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871     06FB                     _UART_write_char:	
  2872                           ;psect for function _UART_write_char
  2873                           
  2874     06FB                     l1709:	
  2875                           ;incstack = 0
  2876                           ; Regs used in _UART_write_char: [wreg-fsr0h+btemp+1+pclath]
  2877                           
  2878                           
  2879                           ;UART.c: 68: void UART_write_char(char *c);UART.c: 69: {;UART.c: 70:     while (*c != '\
      +                          0') {
  2880     06FB  2F14               	goto	l1715
  2881     06FC                     l122:
  2882     06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2883     06FD  1303               	bcf	3,6	;RP1=0, select bank1
  2884     06FE  1C98               	btfss	24,1	;volatile
  2885     06FF  2F01               	goto	u1151
  2886     0700  2F02               	goto	u1150
  2887     0701                     u1151:
  2888     0701  2EFC               	goto	l122
  2889     0702                     u1150:
  2890     0702                     l1711:
  2891                           
  2892                           ;UART.c: 72:         TXREG = *c;
  2893     0702  1283               	bcf	3,5	;RP0=0, select bank0
  2894     0703  1303               	bcf	3,6	;RP1=0, select bank0
  2895     0704  0842               	movf	UART_write_char@c+1,w
  2896     0705  00FF               	movwf	btemp+1
  2897     0706  0841               	movf	UART_write_char@c,w
  2898     0707  0084               	movwf	4
  2899     0708  120A  118A  2600  120A  118A  	fcall	stringtab
  2900     070D  0099               	movwf	25	;volatile
  2901     070E                     l1713:
  2902                           
  2903                           ;UART.c: 73:         c++;
  2904     070E  3001               	movlw	1
  2905     070F  07C1               	addwf	UART_write_char@c,f
  2906     0710  1803               	skipnc
  2907     0711  0AC2               	incf	UART_write_char@c+1,f
  2908     0712  3000               	movlw	0
  2909     0713  07C2               	addwf	UART_write_char@c+1,f
  2910     0714                     l1715:
  2911                           
  2912                           ;UART.c: 70:     while (*c != '\0') {
  2913     0714  1283               	bcf	3,5	;RP0=0, select bank0
  2914     0715  1303               	bcf	3,6	;RP1=0, select bank0
  2915     0716  0842               	movf	UART_write_char@c+1,w
  2916     0717  00FF               	movwf	btemp+1
  2917     0718  0841               	movf	UART_write_char@c,w
  2918     0719  0084               	movwf	4
  2919     071A  120A  118A  2600  120A  118A  	fcall	stringtab
  2920     071F  3A00               	xorlw	0
  2921     0720  1D03               	skipz
  2922     0721  2F23               	goto	u1161
  2923     0722  2F24               	goto	u1160
  2924     0723                     u1161:
  2925     0723  2EFC               	goto	l122
  2926     0724                     u1160:
  2927     0724                     l126:
  2928     0724  0008               	return
  2929     0725                     __end_of_UART_write_char:
  2930                           
  2931                           	psect	text9
  2932     03E0                     __ptext9:	
  2933 ;; *************** function _Lcd_Write_String *****************
  2934 ;; Defined at:
  2935 ;;		line 69 in file "LCD.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  a               2   37[BANK0 ] PTR unsigned char 
  2938 ;;		 -> cont(8), STR_4(9), STR_2(8), volt(4), 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  i               2    3[BANK1 ] int 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       2       0       0       0
  2951 ;;      Locals:         0       0       2       0       0
  2952 ;;      Temps:          0       0       3       0       0
  2953 ;;      Totals:         0       2       5       0       0
  2954 ;;Total ram usage:        7 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 5
  2957 ;; This function calls:
  2958 ;;		_Lcd_Write_Char
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964     03E0                     _Lcd_Write_String:	
  2965                           ;psect for function _Lcd_Write_String
  2966                           
  2967     03E0                     l2031:	
  2968                           ;incstack = 0
  2969                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2970                           
  2971                           
  2972                           ;LCD.c: 70:     int i;;LCD.c: 71:     for (i = 0; a[i] != '\0'; i++)
  2973     03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2974     03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2975     03E2  01A3               	clrf	Lcd_Write_String@i^(0+128)
  2976     03E3  01A4               	clrf	(Lcd_Write_String@i+1)^(0+128)
  2977     03E4  2C19               	goto	l2037
  2978     03E5                     l2033:
  2979                           
  2980                           ;LCD.c: 72:         Lcd_Write_Char(a[i]);
  2981     03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2982     03E6  1303               	bcf	3,6	;RP1=0, select bank1
  2983     03E7  0823               	movf	Lcd_Write_String@i^(0+128),w
  2984     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2985     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2986     03EA  0745               	addwf	Lcd_Write_String@a,w
  2987     03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2988     03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2989     03ED  00A1               	movwf	(??_Lcd_Write_String+1)^(0+128)
  2990     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2991     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2992     03F0  0846               	movf	Lcd_Write_String@a+1,w
  2993     03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2994     03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2995     03F3  00A0               	movwf	??_Lcd_Write_String^(0+128)
  2996     03F4  1803               	skipnc
  2997     03F5  0AA0               	incf	??_Lcd_Write_String^(0+128),f
  2998     03F6  1FA3               	btfss	Lcd_Write_String@i^(0+128),7
  2999     03F7  2BF9               	goto	u1430
  3000     03F8  03A0               	decf	??_Lcd_Write_String^(0+128),f
  3001     03F9                     u1430:
  3002     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3003     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  3004     03FB  0820               	movf	??_Lcd_Write_String^(0+128),w
  3005     03FC  00A2               	movwf	((??_Lcd_Write_String+1)^(0+128)+1)
  3006     03FD  0822               	movf	(??_Lcd_Write_String+2)^(0+128),w
  3007     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3008     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3009     0400  00FF               	movwf	btemp+1
  3010     0401  1683               	bsf	3,5	;RP0=1, select bank1
  3011     0402  1303               	bcf	3,6	;RP1=0, select bank1
  3012     0403  0821               	movf	(??_Lcd_Write_String+1)^(0+128),w
  3013     0404  0084               	movwf	4
  3014     0405  1283               	bcf	3,5	;RP0=0, select bank0
  3015     0406  1303               	bcf	3,6	;RP1=0, select bank0
  3016     0407  120A  118A  2600  120A  118A  	fcall	stringtab
  3017     040C  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_Char
  3018     0411                     l2035:
  3019     0411  3001               	movlw	1
  3020     0412  1683               	bsf	3,5	;RP0=1, select bank1
  3021     0413  1303               	bcf	3,6	;RP1=0, select bank1
  3022     0414  07A3               	addwf	Lcd_Write_String@i^(0+128),f
  3023     0415  1803               	skipnc
  3024     0416  0AA4               	incf	(Lcd_Write_String@i+1)^(0+128),f
  3025     0417  3000               	movlw	0
  3026     0418  07A4               	addwf	(Lcd_Write_String@i+1)^(0+128),f
  3027     0419                     l2037:
  3028     0419  0823               	movf	Lcd_Write_String@i^(0+128),w
  3029     041A  1283               	bcf	3,5	;RP0=0, select bank0
  3030     041B  1303               	bcf	3,6	;RP1=0, select bank0
  3031     041C  0745               	addwf	Lcd_Write_String@a,w
  3032     041D  1683               	bsf	3,5	;RP0=1, select bank1
  3033     041E  1303               	bcf	3,6	;RP1=0, select bank1
  3034     041F  00A1               	movwf	(??_Lcd_Write_String+1)^(0+128)
  3035     0420  1283               	bcf	3,5	;RP0=0, select bank0
  3036     0421  1303               	bcf	3,6	;RP1=0, select bank0
  3037     0422  0846               	movf	Lcd_Write_String@a+1,w
  3038     0423  1683               	bsf	3,5	;RP0=1, select bank1
  3039     0424  1303               	bcf	3,6	;RP1=0, select bank1
  3040     0425  00A0               	movwf	??_Lcd_Write_String^(0+128)
  3041     0426  1803               	skipnc
  3042     0427  0AA0               	incf	??_Lcd_Write_String^(0+128),f
  3043     0428  1FA3               	btfss	Lcd_Write_String@i^(0+128),7
  3044     0429  2C2B               	goto	u1440
  3045     042A  03A0               	decf	??_Lcd_Write_String^(0+128),f
  3046     042B                     u1440:
  3047     042B  1683               	bsf	3,5	;RP0=1, select bank1
  3048     042C  1303               	bcf	3,6	;RP1=0, select bank1
  3049     042D  0820               	movf	??_Lcd_Write_String^(0+128),w
  3050     042E  00A2               	movwf	((??_Lcd_Write_String+1)^(0+128)+1)
  3051     042F  0822               	movf	(??_Lcd_Write_String+2)^(0+128),w
  3052     0430  1283               	bcf	3,5	;RP0=0, select bank0
  3053     0431  1303               	bcf	3,6	;RP1=0, select bank0
  3054     0432  00FF               	movwf	btemp+1
  3055     0433  1683               	bsf	3,5	;RP0=1, select bank1
  3056     0434  1303               	bcf	3,6	;RP1=0, select bank1
  3057     0435  0821               	movf	(??_Lcd_Write_String+1)^(0+128),w
  3058     0436  0084               	movwf	4
  3059     0437  1283               	bcf	3,5	;RP0=0, select bank0
  3060     0438  1303               	bcf	3,6	;RP1=0, select bank0
  3061     0439  120A  118A  2600  120A  118A  	fcall	stringtab
  3062     043E  3A00               	xorlw	0
  3063     043F  1D03               	skipz
  3064     0440  2C42               	goto	u1451
  3065     0441  2C43               	goto	u1450
  3066     0442                     u1451:
  3067     0442  2BE5               	goto	l2033
  3068     0443                     u1450:
  3069     0443                     l74:
  3070     0443  0008               	return
  3071     0444                     __end_of_Lcd_Write_String:
  3072                           
  3073                           	psect	text10
  3074     07AB                     __ptext10:	
  3075 ;; *************** function _Lcd_Write_Char *****************
  3076 ;; Defined at:
  3077 ;;		line 57 in file "LCD.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  a               1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  a               1   36[BANK0 ] unsigned char 
  3082 ;;  y               1   35[BANK0 ] unsigned char 
  3083 ;;  temp            1    0        unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       0       0       0       0
  3094 ;;      Locals:         0       2       0       0       0
  3095 ;;      Temps:          0       1       0       0       0
  3096 ;;      Totals:         0       3       0       0       0
  3097 ;;Total ram usage:        3 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 4
  3100 ;; This function calls:
  3101 ;;		_Lcd_Port
  3102 ;; This function is called by:
  3103 ;;		_Lcd_Write_String
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107     07AB                     _Lcd_Write_Char:	
  3108                           ;psect for function _Lcd_Write_Char
  3109                           
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3113                           ;Lcd_Write_Char@a stored from wreg
  3114     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3115     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3116     07AD  00C4               	movwf	Lcd_Write_Char@a
  3117     07AE                     l1973:
  3118                           
  3119                           ;LCD.c: 60:     y = a;
  3120     07AE  0844               	movf	Lcd_Write_Char@a,w
  3121     07AF  00C3               	movwf	Lcd_Write_Char@y
  3122     07B0                     l1975:
  3123                           
  3124                           ;LCD.c: 61:     RE0 = 1;
  3125     07B0  1409               	bsf	9,0	;volatile
  3126     07B1                     l1977:
  3127                           
  3128                           ;LCD.c: 62:     Lcd_Port(y);
  3129     07B1  0843               	movf	Lcd_Write_Char@y,w
  3130     07B2  120A  118A  27EF  120A  118A  	fcall	_Lcd_Port
  3131     07B7                     l1979:
  3132                           
  3133                           ;LCD.c: 63:     RE1 = 1;
  3134     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  3135     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  3136     07B9  1489               	bsf	9,1	;volatile
  3137     07BA                     l1981:
  3138                           
  3139                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3140     07BA  3019               	movlw	25
  3141     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3142     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3143     07BD  00C2               	movwf	??_Lcd_Write_Char
  3144     07BE                     u1627:
  3145     07BE  0BC2               	decfsz	??_Lcd_Write_Char,f
  3146     07BF  2FBE               	goto	u1627
  3147     07C0  2FC1               	nop2
  3148     07C1                     l1983:
  3149                           
  3150                           ;LCD.c: 65:     RE1 = 0;
  3151     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  3152     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  3153     07C3  1089               	bcf	9,1	;volatile
  3154     07C4                     l68:
  3155     07C4  0008               	return
  3156     07C5                     __end_of_Lcd_Write_Char:
  3157                           
  3158                           	psect	text11
  3159     074F                     __ptext11:	
  3160 ;; *************** function _Lcd_Set_Cursor *****************
  3161 ;; Defined at:
  3162 ;;		line 30 in file "LCD.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  a               1    wreg     unsigned char 
  3165 ;;  b               1   37[BANK0 ] unsigned char 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  a               1   38[BANK0 ] unsigned char 
  3168 ;;  temp            1   39[BANK0 ] unsigned char 
  3169 ;;  y               1    0        unsigned char 
  3170 ;;  z               1    0        unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         0       1       0       0       0
  3181 ;;      Locals:         0       2       0       0       0
  3182 ;;      Temps:          0       0       0       0       0
  3183 ;;      Totals:         0       3       0       0       0
  3184 ;;Total ram usage:        3 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 5
  3187 ;; This function calls:
  3188 ;;		_Lcd_Cmd
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194     074F                     _Lcd_Set_Cursor:	
  3195                           ;psect for function _Lcd_Set_Cursor
  3196                           
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3200                           ;Lcd_Set_Cursor@a stored from wreg
  3201     074F  1283               	bcf	3,5	;RP0=0, select bank0
  3202     0750  1303               	bcf	3,6	;RP1=0, select bank0
  3203     0751  00C6               	movwf	Lcd_Set_Cursor@a
  3204     0752                     l2009:
  3205                           
  3206                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  3207     0752  0346               	decf	Lcd_Set_Cursor@a,w
  3208     0753  1D03               	btfss	3,2
  3209     0754  2F56               	goto	u1411
  3210     0755  2F57               	goto	u1410
  3211     0756                     u1411:
  3212     0756  2F61               	goto	l2015
  3213     0757                     u1410:
  3214     0757                     l2011:
  3215                           
  3216                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  3217     0757  0845               	movf	Lcd_Set_Cursor@b,w
  3218     0758  3E7F               	addlw	127
  3219     0759  00C7               	movwf	Lcd_Set_Cursor@temp
  3220     075A                     l2013:
  3221                           
  3222                           ;LCD.c: 34:         Lcd_Cmd(temp);
  3223     075A  0847               	movf	Lcd_Set_Cursor@temp,w
  3224     075B  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3225                           
  3226                           ;LCD.c: 35:     } else if (a == 2) {
  3227     0760  2F70               	goto	l62
  3228     0761                     l2015:
  3229     0761  3002               	movlw	2
  3230     0762  0646               	xorwf	Lcd_Set_Cursor@a,w
  3231     0763  1D03               	btfss	3,2
  3232     0764  2F66               	goto	u1421
  3233     0765  2F67               	goto	u1420
  3234     0766                     u1421:
  3235     0766  2F70               	goto	l62
  3236     0767                     u1420:
  3237     0767                     l2017:
  3238                           
  3239                           ;LCD.c: 36:         temp = 0xC0 + b - 1;
  3240     0767  0845               	movf	Lcd_Set_Cursor@b,w
  3241     0768  3EBF               	addlw	191
  3242     0769  00C7               	movwf	Lcd_Set_Cursor@temp
  3243     076A                     l2019:
  3244                           
  3245                           ;LCD.c: 37:         Lcd_Cmd(temp);
  3246     076A  0847               	movf	Lcd_Set_Cursor@temp,w
  3247     076B  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3248     0770                     l62:
  3249     0770  0008               	return
  3250     0771                     __end_of_Lcd_Set_Cursor:
  3251                           
  3252                           	psect	text12
  3253     0444                     __ptext12:	
  3254 ;; *************** function _Lcd_Init *****************
  3255 ;; Defined at:
  3256 ;;		line 41 in file "LCD.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, pclath, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3270 ;;      Params:         0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0
  3272 ;;      Temps:          0       2       0       0       0
  3273 ;;      Totals:         0       2       0       0       0
  3274 ;;Total ram usage:        2 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 5
  3277 ;; This function calls:
  3278 ;;		_Lcd_Cmd
  3279 ;;		_Lcd_Port
  3280 ;; This function is called by:
  3281 ;;		_main
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285     0444                     _Lcd_Init:	
  3286                           ;psect for function _Lcd_Init
  3287                           
  3288     0444                     l2021:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3291                           
  3292                           
  3293                           ;LCD.c: 42:     Lcd_Port(0x00);
  3294     0444  3000               	movlw	0
  3295     0445  120A  118A  27EF  120A  118A  	fcall	_Lcd_Port
  3296     044A                     l2023:
  3297                           
  3298                           ;LCD.c: 43:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3299     044A  3027               	movlw	39
  3300     044B  1283               	bcf	3,5	;RP0=0, select bank0
  3301     044C  1303               	bcf	3,6	;RP1=0, select bank0
  3302     044D  00C6               	movwf	??_Lcd_Init+1
  3303     044E  30F4               	movlw	244
  3304     044F  00C5               	movwf	??_Lcd_Init
  3305     0450                     u1637:
  3306     0450  0BC5               	decfsz	??_Lcd_Init,f
  3307     0451  2C50               	goto	u1637
  3308     0452  0BC6               	decfsz	??_Lcd_Init+1,f
  3309     0453  2C50               	goto	u1637
  3310     0454  0000               	nop
  3311     0455                     l2025:
  3312                           
  3313                           ;LCD.c: 44:     Lcd_Cmd(0x30);
  3314     0455  3030               	movlw	48
  3315     0456  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3316                           
  3317                           ;LCD.c: 45:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3318     045B  300B               	movlw	11
  3319     045C  1283               	bcf	3,5	;RP0=0, select bank0
  3320     045D  1303               	bcf	3,6	;RP1=0, select bank0
  3321     045E  00C6               	movwf	??_Lcd_Init+1
  3322     045F  3061               	movlw	97
  3323     0460  00C5               	movwf	??_Lcd_Init
  3324     0461                     u1647:
  3325     0461  0BC5               	decfsz	??_Lcd_Init,f
  3326     0462  2C61               	goto	u1647
  3327     0463  0BC6               	decfsz	??_Lcd_Init+1,f
  3328     0464  2C61               	goto	u1647
  3329     0465  2C66               	nop2
  3330     0466                     l2027:
  3331                           
  3332                           ;LCD.c: 46:     Lcd_Cmd(0x30);
  3333     0466  3030               	movlw	48
  3334     0467  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3335     046C                     l2029:
  3336                           
  3337                           ;LCD.c: 47:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3338     046C  3041               	movlw	65
  3339     046D  1283               	bcf	3,5	;RP0=0, select bank0
  3340     046E  1303               	bcf	3,6	;RP1=0, select bank0
  3341     046F  00C5               	movwf	??_Lcd_Init
  3342     0470                     u1657:
  3343     0470  0BC5               	decfsz	??_Lcd_Init,f
  3344     0471  2C70               	goto	u1657
  3345     0472  2C73               	nop2
  3346                           
  3347                           ;LCD.c: 48:     Lcd_Cmd(0x30);
  3348     0473  3030               	movlw	48
  3349     0474  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3350                           
  3351                           ;LCD.c: 50:     Lcd_Cmd(0x38);
  3352     0479  3038               	movlw	56
  3353     047A  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3354                           
  3355                           ;LCD.c: 51:     Lcd_Cmd(0x00);
  3356     047F  3000               	movlw	0
  3357     0480  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3358                           
  3359                           ;LCD.c: 52:     Lcd_Cmd(0x0C);
  3360     0485  300C               	movlw	12
  3361     0486  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3362                           
  3363                           ;LCD.c: 53:     Lcd_Cmd(0x00);
  3364     048B  3000               	movlw	0
  3365     048C  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3366                           
  3367                           ;LCD.c: 54:     Lcd_Cmd(0x06);
  3368     0491  3006               	movlw	6
  3369     0492  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3370     0497                     l65:
  3371     0497  0008               	return
  3372     0498                     __end_of_Lcd_Init:
  3373                           
  3374                           	psect	text13
  3375     07D8                     __ptext13:	
  3376 ;; *************** function _Lcd_Clear *****************
  3377 ;; Defined at:
  3378 ;;		line 25 in file "LCD.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0
  3395 ;;      Totals:         0       0       0       0       0
  3396 ;;Total ram usage:        0 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 5
  3399 ;; This function calls:
  3400 ;;		_Lcd_Cmd
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406     07D8                     _Lcd_Clear:	
  3407                           ;psect for function _Lcd_Clear
  3408                           
  3409     07D8                     l2007:	
  3410                           ;incstack = 0
  3411                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3412                           
  3413                           
  3414                           ;LCD.c: 26:     Lcd_Cmd(0);
  3415     07D8  3000               	movlw	0
  3416     07D9  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3417                           
  3418                           ;LCD.c: 27:     Lcd_Cmd(1);
  3419     07DE  3001               	movlw	1
  3420     07DF  120A  118A  278F  120A  118A  	fcall	_Lcd_Cmd
  3421     07E4                     l56:
  3422     07E4  0008               	return
  3423     07E5                     __end_of_Lcd_Clear:
  3424                           
  3425                           	psect	text14
  3426     078F                     __ptext14:	
  3427 ;; *************** function _Lcd_Cmd *****************
  3428 ;; Defined at:
  3429 ;;		line 17 in file "LCD.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  a               1    wreg     unsigned char 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  a               1   36[BANK0 ] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, pclath, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       0       0       0
  3444 ;;      Locals:         0       1       0       0       0
  3445 ;;      Temps:          0       2       0       0       0
  3446 ;;      Totals:         0       3       0       0       0
  3447 ;;Total ram usage:        3 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 4
  3450 ;; This function calls:
  3451 ;;		_Lcd_Port
  3452 ;; This function is called by:
  3453 ;;		_Lcd_Clear
  3454 ;;		_Lcd_Set_Cursor
  3455 ;;		_Lcd_Init
  3456 ;;		_Lcd_Shift_Right
  3457 ;;		_Lcd_Shift_Left
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461     078F                     _Lcd_Cmd:	
  3462                           ;psect for function _Lcd_Cmd
  3463                           
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3467                           ;Lcd_Cmd@a stored from wreg
  3468     078F  1283               	bcf	3,5	;RP0=0, select bank0
  3469     0790  1303               	bcf	3,6	;RP1=0, select bank0
  3470     0791  00C4               	movwf	Lcd_Cmd@a
  3471     0792                     l1963:
  3472                           
  3473                           ;LCD.c: 18:     RE0 = 0;
  3474     0792  1009               	bcf	9,0	;volatile
  3475     0793                     l1965:
  3476                           
  3477                           ;LCD.c: 19:     Lcd_Port(a);
  3478     0793  0844               	movf	Lcd_Cmd@a,w
  3479     0794  120A  118A  27EF  120A  118A  	fcall	_Lcd_Port
  3480     0799                     l1967:
  3481                           
  3482                           ;LCD.c: 20:     RE1 = 1;
  3483     0799  1283               	bcf	3,5	;RP0=0, select bank0
  3484     079A  1303               	bcf	3,6	;RP1=0, select bank0
  3485     079B  1489               	bsf	9,1	;volatile
  3486     079C                     l1969:
  3487                           
  3488                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3489     079C  300B               	movlw	11
  3490     079D  1283               	bcf	3,5	;RP0=0, select bank0
  3491     079E  1303               	bcf	3,6	;RP1=0, select bank0
  3492     079F  00C3               	movwf	??_Lcd_Cmd+1
  3493     07A0  3061               	movlw	97
  3494     07A1  00C2               	movwf	??_Lcd_Cmd
  3495     07A2                     u1667:
  3496     07A2  0BC2               	decfsz	??_Lcd_Cmd,f
  3497     07A3  2FA2               	goto	u1667
  3498     07A4  0BC3               	decfsz	??_Lcd_Cmd+1,f
  3499     07A5  2FA2               	goto	u1667
  3500     07A6  2FA7               	nop2
  3501     07A7                     l1971:
  3502                           
  3503                           ;LCD.c: 22:     RE1 = 0;
  3504     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  3505     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  3506     07A9  1089               	bcf	9,1	;volatile
  3507     07AA                     l53:
  3508     07AA  0008               	return
  3509     07AB                     __end_of_Lcd_Cmd:
  3510                           
  3511                           	psect	text15
  3512     07EF                     __ptext15:	
  3513 ;; *************** function _Lcd_Port *****************
  3514 ;; Defined at:
  3515 ;;		line 13 in file "LCD.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  a               1    wreg     unsigned char 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  a               1   33[BANK0 ] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       0       0       0       0
  3530 ;;      Locals:         0       1       0       0       0
  3531 ;;      Temps:          0       0       0       0       0
  3532 ;;      Totals:         0       1       0       0       0
  3533 ;;Total ram usage:        1 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 3
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_Lcd_Cmd
  3540 ;;		_Lcd_Init
  3541 ;;		_Lcd_Write_Char
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545     07EF                     _Lcd_Port:	
  3546                           ;psect for function _Lcd_Port
  3547                           
  3548                           
  3549                           ;incstack = 0
  3550                           ; Regs used in _Lcd_Port: [wreg]
  3551                           ;Lcd_Port@a stored from wreg
  3552     07EF  1283               	bcf	3,5	;RP0=0, select bank0
  3553     07F0  1303               	bcf	3,6	;RP1=0, select bank0
  3554     07F1  00C1               	movwf	Lcd_Port@a
  3555     07F2                     l1961:
  3556                           
  3557                           ;LCD.c: 14:     PORTD = a;
  3558     07F2  0841               	movf	Lcd_Port@a,w
  3559     07F3  0088               	movwf	8	;volatile
  3560     07F4                     l50:
  3561     07F4  0008               	return
  3562     07F5                     __end_of_Lcd_Port:
  3563                           
  3564                           	psect	text16
  3565     02DD                     __ptext16:	
  3566 ;; *************** function _isr *****************
  3567 ;; Defined at:
  3568 ;;		line 50 in file "Lab_2_main.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  opcion          1   32[BANK0 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         0       1       0       0       0
  3584 ;;      Temps:          0       6       0       0       0
  3585 ;;      Totals:         0       7       0       0       0
  3586 ;;Total ram usage:        7 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 2
  3589 ;; This function calls:
  3590 ;;		_adc_change_channel
  3591 ;;		_adc_read
  3592 ;;		_map
  3593 ;;		i1_UART_write_char
  3594 ;; This function is called by:
  3595 ;;		Interrupt level 1
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599     02DD                     _isr:	
  3600                           ;psect for function _isr
  3601                           
  3602     02DD                     i1l1841:
  3603                           
  3604                           ;Lab_2_main.c: 52:     if (ADIF)
  3605     02DD  1F0C               	btfss	12,6	;volatile
  3606     02DE  2AE0               	goto	u126_21
  3607     02DF  2AE1               	goto	u126_20
  3608     02E0                     u126_21:
  3609     02E0  2B1C               	goto	i1l216
  3610     02E1                     u126_20:
  3611     02E1                     i1l1843:
  3612                           
  3613                           ;Lab_2_main.c: 53:     {;Lab_2_main.c: 54:         adc_change_channel(1);
  3614     02E1  3001               	movlw	1
  3615     02E2  00F0               	movwf	adc_change_channel@channel
  3616     02E3  3000               	movlw	0
  3617     02E4  00F1               	movwf	adc_change_channel@channel+1
  3618     02E5  120A  118A  2771  120A  118A  	fcall	_adc_change_channel
  3619     02EA                     i1l1845:
  3620                           
  3621                           ;Lab_2_main.c: 55:         V = adc_read();
  3622     02EA  120A  118A  27E5  120A  118A  	fcall	_adc_read
  3623     02EF  0871               	movf	?_adc_read+1,w
  3624     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  3625     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  3626     02F2  00C9               	movwf	_V+1
  3627     02F3  0870               	movf	?_adc_read,w
  3628     02F4  00C8               	movwf	_V
  3629     02F5                     i1l1847:
  3630                           
  3631                           ;Lab_2_main.c: 56:         V_out = map (V, 0, 255, 0, 5);
  3632     02F5  0849               	movf	_V+1,w
  3633     02F6  00AF               	movwf	map@val+1
  3634     02F7  0848               	movf	_V,w
  3635     02F8  00AE               	movwf	map@val
  3636     02F9  3000               	movlw	0
  3637     02FA  00B0               	movwf	map@min_in
  3638     02FB  00B1               	movwf	map@min_in+1
  3639     02FC  30FF               	movlw	255
  3640     02FD  00B2               	movwf	map@max_in
  3641     02FE  3000               	movlw	0
  3642     02FF  00B3               	movwf	map@max_in+1
  3643     0300  3000               	movlw	0
  3644     0301  00B4               	movwf	map@min_out
  3645     0302  00B5               	movwf	map@min_out+1
  3646     0303  3005               	movlw	5
  3647     0304  00B6               	movwf	map@max_out
  3648     0305  3000               	movlw	0
  3649     0306  00B7               	movwf	map@max_out+1
  3650     0307  120A  118A  2498  120A  118A  	fcall	_map
  3651     030C  1283               	bcf	3,5	;RP0=0, select bank0
  3652     030D  1303               	bcf	3,6	;RP1=0, select bank0
  3653     030E  082F               	movf	?_map+1,w
  3654     030F  1683               	bsf	3,5	;RP0=1, select bank3
  3655     0310  1703               	bsf	3,6	;RP1=1, select bank3
  3656     0311  00DA               	movwf	(_V_out+1)^(0+384)
  3657     0312  1283               	bcf	3,5	;RP0=0, select bank0
  3658     0313  1303               	bcf	3,6	;RP1=0, select bank0
  3659     0314  082E               	movf	?_map,w
  3660     0315  1683               	bsf	3,5	;RP0=1, select bank3
  3661     0316  1703               	bsf	3,6	;RP1=1, select bank3
  3662     0317  00D9               	movwf	_V_out^(0+384)
  3663     0318                     i1l1849:
  3664                           
  3665                           ;Lab_2_main.c: 57:         ADIF =0;
  3666     0318  1283               	bcf	3,5	;RP0=0, select bank0
  3667     0319  1303               	bcf	3,6	;RP1=0, select bank0
  3668     031A  130C               	bcf	12,6	;volatile
  3669     031B  2B64               	goto	i1l217
  3670     031C                     i1l216:	
  3671                           ;Lab_2_main.c: 59:     }
  3672                           
  3673                           
  3674                           ;Lab_2_main.c: 61:     if (RCIF)
  3675     031C  1E8C               	btfss	12,5	;volatile
  3676     031D  2B1F               	goto	u127_21
  3677     031E  2B20               	goto	u127_20
  3678     031F                     u127_21:
  3679     031F  2B64               	goto	i1l217
  3680     0320                     u127_20:
  3681     0320                     i1l1853:
  3682                           
  3683                           ;Lab_2_main.c: 62:     {;Lab_2_main.c: 63:         char opcion = RCREG;
  3684     0320  081A               	movf	26,w	;volatile
  3685     0321  00C0               	movwf	isr@opcion
  3686                           
  3687                           ;Lab_2_main.c: 64:         switch (opcion)
  3688     0322  2B51               	goto	i1l1865
  3689     0323                     i1l1855:
  3690                           
  3691                           ;Lab_2_main.c: 67:                 UART_write_char(volt);
  3692     0323  304B               	movlw	(low (_volt| 0))& (0+255)
  3693     0324  00F0               	movwf	i1UART_write_char@c
  3694     0325  3000               	movlw	0
  3695     0326  00F1               	movwf	i1UART_write_char@c+1
  3696     0327  120A  118A  2725  120A  118A  	fcall	i1_UART_write_char
  3697                           
  3698                           ;Lab_2_main.c: 68:                 break;
  3699     032C  2B64               	goto	i1l217
  3700     032D                     i1l1857:
  3701                           
  3702                           ;Lab_2_main.c: 70:                 contador++;
  3703     032D  3001               	movlw	1
  3704     032E  1683               	bsf	3,5	;RP0=1, select bank3
  3705     032F  1703               	bsf	3,6	;RP1=1, select bank3
  3706     0330  07D7               	addwf	_contador^(0+384),f
  3707     0331  1803               	skipnc
  3708     0332  0AD8               	incf	(_contador+1)^(0+384),f
  3709     0333  3000               	movlw	0
  3710     0334  07D8               	addwf	(_contador+1)^(0+384),f
  3711                           
  3712                           ;Lab_2_main.c: 71:                 break;
  3713     0335  2B64               	goto	i1l217
  3714     0336                     i1l1859:
  3715                           
  3716                           ;Lab_2_main.c: 73:                 contador--;
  3717     0336  30FF               	movlw	255
  3718     0337  1683               	bsf	3,5	;RP0=1, select bank3
  3719     0338  1703               	bsf	3,6	;RP1=1, select bank3
  3720     0339  07D7               	addwf	_contador^(0+384),f
  3721     033A  1803               	skipnc
  3722     033B  0AD8               	incf	(_contador+1)^(0+384),f
  3723     033C  30FF               	movlw	255
  3724     033D  07D8               	addwf	(_contador+1)^(0+384),f
  3725                           
  3726                           ;Lab_2_main.c: 74:                 break;
  3727     033E  2B64               	goto	i1l217
  3728     033F                     i1l1861:
  3729                           
  3730                           ;Lab_2_main.c: 76:                 UART_write_char("Opcion no definida\r");
  3731     033F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3732     0340  00F0               	movwf	i1UART_write_char@c
  3733     0341  3080               	movlw	128
  3734     0342  00F1               	movwf	i1UART_write_char@c+1
  3735     0343  120A  118A  2725  120A  118A  	fcall	i1_UART_write_char
  3736     0348                     i1l1863:	
  3737                           ;Lab_2_main.c: 77:                 while(RCREG != 13);
  3738                           
  3739     0348  300D               	movlw	13
  3740     0349  1283               	bcf	3,5	;RP0=0, select bank0
  3741     034A  1303               	bcf	3,6	;RP1=0, select bank0
  3742     034B  061A               	xorwf	26,w	;volatile
  3743     034C  1D03               	btfss	3,2
  3744     034D  2B4F               	goto	u128_21
  3745     034E  2B50               	goto	u128_20
  3746     034F                     u128_21:
  3747     034F  2B48               	goto	i1l1863
  3748     0350                     u128_20:
  3749     0350  2B64               	goto	i1l217
  3750     0351                     i1l1865:
  3751     0351  0840               	movf	isr@opcion,w
  3752     0352  00BA               	movwf	??_isr
  3753     0353  01BB               	clrf	??_isr+1
  3754                           
  3755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3756                           ; Switch size 1, requested type "simple"
  3757                           ; Number of cases is 1, Range of values is 0 to 0
  3758                           ; switch strategies available:
  3759                           ; Name         Instructions Cycles
  3760                           ; simple_byte            4     3 (average)
  3761                           ; direct_byte           11     8 (fixed)
  3762                           ; jumptable            260     6 (fixed)
  3763                           ;	Chosen strategy is simple_byte
  3764     0354  083B               	movf	??_isr+1,w
  3765     0355  3A00               	xorlw	0	; case 0
  3766     0356  1903               	skipnz
  3767     0357  2B59               	goto	i1l2199
  3768     0358  2B3F               	goto	i1l1861
  3769     0359                     i1l2199:
  3770                           
  3771                           ; Switch size 1, requested type "simple"
  3772                           ; Number of cases is 3, Range of values is 43 to 49
  3773                           ; switch strategies available:
  3774                           ; Name         Instructions Cycles
  3775                           ; simple_byte           10     6 (average)
  3776                           ; direct_byte           32    11 (fixed)
  3777                           ; jumptable            263     9 (fixed)
  3778                           ;	Chosen strategy is simple_byte
  3779     0359  083A               	movf	??_isr,w
  3780     035A  3A2B               	xorlw	43	; case 43
  3781     035B  1903               	skipnz
  3782     035C  2B2D               	goto	i1l1857
  3783     035D  3A06               	xorlw	6	; case 45
  3784     035E  1903               	skipnz
  3785     035F  2B36               	goto	i1l1859
  3786     0360  3A1C               	xorlw	28	; case 49
  3787     0361  1903               	skipnz
  3788     0362  2B23               	goto	i1l1855
  3789     0363  2B3F               	goto	i1l1861
  3790     0364                     i1l217:
  3791     0364  1283               	bcf	3,5	;RP0=0, select bank0
  3792     0365  1303               	bcf	3,6	;RP1=0, select bank0
  3793     0366  083F               	movf	??_isr+5,w
  3794     0367  00FF               	movwf	btemp+1
  3795     0368  083E               	movf	??_isr+4,w
  3796     0369  008A               	movwf	10
  3797     036A  083D               	movf	??_isr+3,w
  3798     036B  0084               	movwf	4
  3799     036C  0E3C               	swapf	??_isr+2,w
  3800     036D  0083               	movwf	3
  3801     036E  0EFE               	swapf	btemp,f
  3802     036F  0E7E               	swapf	btemp,w
  3803     0370  0009               	retfie
  3804     0371                     __end_of_isr:
  3805                           
  3806                           	psect	intentry
  3807     0004                     __pintentry:	
  3808                           ;incstack = 0
  3809                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3810                           
  3811     0004                     interrupt_function:
  3812     007E                     saved_w	set	btemp
  3813     0004  00FE               	movwf	btemp
  3814     0005  0E03               	swapf	3,w
  3815     0006  1283               	bcf	3,5	;RP0=0, select bank0
  3816     0007  1303               	bcf	3,6	;RP1=0, select bank0
  3817     0008  00BC               	movwf	??_isr+2
  3818     0009  0804               	movf	4,w
  3819     000A  00BD               	movwf	??_isr+3
  3820     000B  080A               	movf	10,w
  3821     000C  00BE               	movwf	??_isr+4
  3822     000D  087F               	movf	btemp+1,w
  3823     000E  00BF               	movwf	??_isr+5
  3824     000F  120A  118A  2ADD   	ljmp	_isr
  3825                           
  3826                           	psect	text17
  3827     0725                     __ptext17:	
  3828 ;; *************** function i1_UART_write_char *****************
  3829 ;; Defined at:
  3830 ;;		line 68 in file "UART.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  c               2    0[COMMON] PTR unsigned char 
  3833 ;;		 -> main@texto(71), STR_1(20), volt(4), 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         2       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0
  3848 ;;      Totals:         2       0       0       0       0
  3849 ;;Total ram usage:        2 bytes
  3850 ;; Hardware stack levels used: 2
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_isr
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858     0725                     i1_UART_write_char:	
  3859                           ;psect for function i1_UART_write_char
  3860                           
  3861     0725                     i1l1829:	
  3862                           ;incstack = 0
  3863                           ; Regs used in i1_UART_write_char: [wreg-fsr0h+btemp+1+pclath]
  3864                           
  3865                           
  3866                           ;UART.c: 68: void UART_write_char(char *c);UART.c: 69: {;UART.c: 70:     while (*c != '\
      +                          0') {
  3867     0725  2F3E               	goto	i1l1835
  3868     0726                     i1l122:
  3869     0726  1683               	bsf	3,5	;RP0=1, select bank1
  3870     0727  1303               	bcf	3,6	;RP1=0, select bank1
  3871     0728  1C98               	btfss	24,1	;volatile
  3872     0729  2F2B               	goto	u124_21
  3873     072A  2F2C               	goto	u124_20
  3874     072B                     u124_21:
  3875     072B  2F26               	goto	i1l122
  3876     072C                     u124_20:
  3877     072C                     i1l1831:
  3878                           
  3879                           ;UART.c: 72:         TXREG = *c;
  3880     072C  0871               	movf	i1UART_write_char@c+1,w
  3881     072D  1283               	bcf	3,5	;RP0=0, select bank0
  3882     072E  1303               	bcf	3,6	;RP1=0, select bank0
  3883     072F  00FF               	movwf	btemp+1
  3884     0730  0870               	movf	i1UART_write_char@c,w
  3885     0731  0084               	movwf	4
  3886     0732  120A  118A  2600  120A  118A  	fcall	stringtab
  3887     0737  0099               	movwf	25	;volatile
  3888     0738                     i1l1833:
  3889                           
  3890                           ;UART.c: 73:         c++;
  3891     0738  3001               	movlw	1
  3892     0739  07F0               	addwf	i1UART_write_char@c,f
  3893     073A  1803               	skipnc
  3894     073B  0AF1               	incf	i1UART_write_char@c+1,f
  3895     073C  3000               	movlw	0
  3896     073D  07F1               	addwf	i1UART_write_char@c+1,f
  3897     073E                     i1l1835:
  3898                           
  3899                           ;UART.c: 70:     while (*c != '\0') {
  3900     073E  0871               	movf	i1UART_write_char@c+1,w
  3901     073F  1283               	bcf	3,5	;RP0=0, select bank0
  3902     0740  1303               	bcf	3,6	;RP1=0, select bank0
  3903     0741  00FF               	movwf	btemp+1
  3904     0742  0870               	movf	i1UART_write_char@c,w
  3905     0743  0084               	movwf	4
  3906     0744  120A  118A  2600  120A  118A  	fcall	stringtab
  3907     0749  3A00               	xorlw	0
  3908     074A  1D03               	skipz
  3909     074B  2F4D               	goto	u125_21
  3910     074C  2F4E               	goto	u125_20
  3911     074D                     u125_21:
  3912     074D  2F26               	goto	i1l122
  3913     074E                     u125_20:
  3914     074E                     i1l126:
  3915     074E  0008               	return
  3916     074F                     __end_ofi1_UART_write_char:
  3917                           
  3918                           	psect	text18
  3919     0498                     __ptext18:	
  3920 ;; *************** function _map *****************
  3921 ;; Defined at:
  3922 ;;		line 2 in file "Map_adc.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  val             2   14[BANK0 ] int 
  3925 ;;  min_in          2   16[BANK0 ] int 
  3926 ;;  max_in          2   18[BANK0 ] int 
  3927 ;;  min_out         2   20[BANK0 ] int 
  3928 ;;  max_out         2   22[BANK0 ] int 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  vo              2   24[BANK0 ] int 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  2   14[BANK0 ] int 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0      10       0       0       0
  3941 ;;      Locals:         0       2       0       0       0
  3942 ;;      Temps:          0       0       0       0       0
  3943 ;;      Totals:         0      12       0       0       0
  3944 ;;Total ram usage:       12 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 1
  3947 ;; This function calls:
  3948 ;;		___aldiv
  3949 ;;		___lmul
  3950 ;; This function is called by:
  3951 ;;		_isr
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955     0498                     _map:	
  3956                           ;psect for function _map
  3957                           
  3958     0498                     i1l1703:	
  3959                           ;incstack = 0
  3960                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3961                           
  3962                           
  3963                           ;Map_adc.c: 2: int map (int val, int min_in, int max_in, int min_out, int max_out);Map_a
      +                          dc.c: 3: {;Map_adc.c: 4:     int vo;;Map_adc.c: 5:     vo = (long)(val-min_in)*(max_out-
      +                          min_out)/(max_in-min_in)+ min_out;
  3964     0498  1283               	bcf	3,5	;RP0=0, select bank0
  3965     0499  1303               	bcf	3,6	;RP1=0, select bank0
  3966     049A  0830               	movf	map@min_in,w
  3967     049B  0232               	subwf	map@max_in,w
  3968     049C  00A0               	movwf	___aldiv@divisor
  3969     049D  0831               	movf	map@min_in+1,w
  3970     049E  1C03               	skipc
  3971     049F  0A31               	incf	map@min_in+1,w
  3972     04A0  0233               	subwf	map@max_in+1,w
  3973     04A1  00A1               	movwf	___aldiv@divisor+1
  3974     04A2  01A2               	clrf	___aldiv@divisor+2
  3975     04A3  1BA1               	btfsc	___aldiv@divisor+1,7
  3976     04A4  03A2               	decf	___aldiv@divisor+2,f
  3977     04A5  0822               	movf	___aldiv@divisor+2,w
  3978     04A6  00A3               	movwf	___aldiv@divisor+3
  3979     04A7  0830               	movf	map@min_in,w
  3980     04A8  022E               	subwf	map@val,w
  3981     04A9  00F0               	movwf	___lmul@multiplier
  3982     04AA  0831               	movf	map@min_in+1,w
  3983     04AB  1C03               	skipc
  3984     04AC  0A31               	incf	map@min_in+1,w
  3985     04AD  022F               	subwf	map@val+1,w
  3986     04AE  00F1               	movwf	___lmul@multiplier+1
  3987     04AF  01F2               	clrf	___lmul@multiplier+2
  3988     04B0  1BF1               	btfsc	___lmul@multiplier+1,7
  3989     04B1  03F2               	decf	___lmul@multiplier+2,f
  3990     04B2  0872               	movf	___lmul@multiplier+2,w
  3991     04B3  00F3               	movwf	___lmul@multiplier+3
  3992     04B4  0834               	movf	map@min_out,w
  3993     04B5  0236               	subwf	map@max_out,w
  3994     04B6  00F4               	movwf	___lmul@multiplicand
  3995     04B7  0835               	movf	map@min_out+1,w
  3996     04B8  1C03               	skipc
  3997     04B9  0A35               	incf	map@min_out+1,w
  3998     04BA  0237               	subwf	map@max_out+1,w
  3999     04BB  00F5               	movwf	___lmul@multiplicand+1
  4000     04BC  01F6               	clrf	___lmul@multiplicand+2
  4001     04BD  1BF5               	btfsc	___lmul@multiplicand+1,7
  4002     04BE  03F6               	decf	___lmul@multiplicand+2,f
  4003     04BF  0876               	movf	___lmul@multiplicand+2,w
  4004     04C0  00F7               	movwf	___lmul@multiplicand+3
  4005     04C1  120A  118A  25B9  120A  118A  	fcall	___lmul
  4006     04C6  0873               	movf	?___lmul+3,w
  4007     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  4008     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  4009     04C9  00A7               	movwf	___aldiv@dividend+3
  4010     04CA  0872               	movf	?___lmul+2,w
  4011     04CB  00A6               	movwf	___aldiv@dividend+2
  4012     04CC  0871               	movf	?___lmul+1,w
  4013     04CD  00A5               	movwf	___aldiv@dividend+1
  4014     04CE  0870               	movf	?___lmul,w
  4015     04CF  00A4               	movwf	___aldiv@dividend
  4016     04D0  120A  118A  2240  120A  118A  	fcall	___aldiv
  4017     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  4018     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  4019     04D7  0834               	movf	map@min_out,w
  4020     04D8  0720               	addwf	?___aldiv,w
  4021     04D9  00B8               	movwf	map@vo
  4022     04DA  0835               	movf	map@min_out+1,w
  4023     04DB  1803               	skipnc
  4024     04DC  0A35               	incf	map@min_out+1,w
  4025     04DD  0721               	addwf	?___aldiv+1,w
  4026     04DE  00B9               	movwf	map@vo+1
  4027     04DF                     i1l1705:
  4028                           
  4029                           ;Map_adc.c: 6:     return vo;
  4030     04DF  0839               	movf	map@vo+1,w
  4031     04E0  00AF               	movwf	?_map+1
  4032     04E1  0838               	movf	map@vo,w
  4033     04E2  00AE               	movwf	?_map
  4034     04E3                     i1l83:
  4035     04E3  0008               	return
  4036     04E4                     __end_of_map:
  4037                           
  4038                           	psect	text19
  4039     05B9                     __ptext19:	
  4040 ;; *************** function ___lmul *****************
  4041 ;; Defined at:
  4042 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  multiplier      4    0[COMMON] unsigned long 
  4045 ;;  multiplicand    4    4[COMMON] unsigned long 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  product         4    9[COMMON] unsigned long 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  4    0[COMMON] unsigned long 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4057 ;;      Params:         8       0       0       0       0
  4058 ;;      Locals:         4       0       0       0       0
  4059 ;;      Temps:          1       0       0       0       0
  4060 ;;      Totals:        13       0       0       0       0
  4061 ;;Total ram usage:       13 bytes
  4062 ;; Hardware stack levels used: 1
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_map
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070     05B9                     ___lmul:	
  4071                           ;psect for function ___lmul
  4072                           
  4073     05B9                     i1l1555:	
  4074                           ;incstack = 0
  4075                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4076                           
  4077     05B9  3000               	movlw	0
  4078     05BA  00FC               	movwf	___lmul@product+3
  4079     05BB  3000               	movlw	0
  4080     05BC  00FB               	movwf	___lmul@product+2
  4081     05BD  3000               	movlw	0
  4082     05BE  00FA               	movwf	___lmul@product+1
  4083     05BF  3000               	movlw	0
  4084     05C0  00F9               	movwf	___lmul@product
  4085     05C1                     i1l1557:
  4086     05C1  1C70               	btfss	___lmul@multiplier,0
  4087     05C2  2DC4               	goto	u81_21
  4088     05C3  2DC5               	goto	u81_20
  4089     05C4                     u81_21:
  4090     05C4  2DDC               	goto	i1l1561
  4091     05C5                     u81_20:
  4092     05C5                     i1l1559:
  4093     05C5  0874               	movf	___lmul@multiplicand,w
  4094     05C6  07F9               	addwf	___lmul@product,f
  4095     05C7  0875               	movf	___lmul@multiplicand+1,w
  4096     05C8  1103               	clrz
  4097     05C9  1803               	skipnc
  4098     05CA  3E01               	addlw	1
  4099     05CB  1903               	skipnz
  4100     05CC  2DCE               	goto	u82_21
  4101     05CD  07FA               	addwf	___lmul@product+1,f
  4102     05CE                     u82_21:
  4103     05CE  0876               	movf	___lmul@multiplicand+2,w
  4104     05CF  1103               	clrz
  4105     05D0  1803               	skipnc
  4106     05D1  3E01               	addlw	1
  4107     05D2  1903               	skipnz
  4108     05D3  2DD5               	goto	u82_22
  4109     05D4  07FB               	addwf	___lmul@product+2,f
  4110     05D5                     u82_22:
  4111     05D5  0877               	movf	___lmul@multiplicand+3,w
  4112     05D6  1103               	clrz
  4113     05D7  1803               	skipnc
  4114     05D8  3E01               	addlw	1
  4115     05D9  1903               	skipnz
  4116     05DA  2DDC               	goto	u82_23
  4117     05DB  07FC               	addwf	___lmul@product+3,f
  4118     05DC                     u82_23:
  4119     05DC                     i1l1561:
  4120     05DC  3001               	movlw	1
  4121     05DD  00F8               	movwf	??___lmul
  4122     05DE                     u83_25:
  4123     05DE  1003               	clrc
  4124     05DF  0DF4               	rlf	___lmul@multiplicand,f
  4125     05E0  0DF5               	rlf	___lmul@multiplicand+1,f
  4126     05E1  0DF6               	rlf	___lmul@multiplicand+2,f
  4127     05E2  0DF7               	rlf	___lmul@multiplicand+3,f
  4128     05E3  0BF8               	decfsz	??___lmul,f
  4129     05E4  2DDE               	goto	u83_25
  4130     05E5                     i1l1563:
  4131     05E5  3001               	movlw	1
  4132     05E6                     u84_25:
  4133     05E6  1003               	clrc
  4134     05E7  0CF3               	rrf	___lmul@multiplier+3,f
  4135     05E8  0CF2               	rrf	___lmul@multiplier+2,f
  4136     05E9  0CF1               	rrf	___lmul@multiplier+1,f
  4137     05EA  0CF0               	rrf	___lmul@multiplier,f
  4138     05EB  3EFF               	addlw	-1
  4139     05EC  1D03               	skipz
  4140     05ED  2DE6               	goto	u84_25
  4141     05EE  0873               	movf	___lmul@multiplier+3,w
  4142     05EF  0472               	iorwf	___lmul@multiplier+2,w
  4143     05F0  0471               	iorwf	___lmul@multiplier+1,w
  4144     05F1  0470               	iorwf	___lmul@multiplier,w
  4145     05F2  1D03               	skipz
  4146     05F3  2DF5               	goto	u85_21
  4147     05F4  2DF6               	goto	u85_20
  4148     05F5                     u85_21:
  4149     05F5  2DC1               	goto	i1l1557
  4150     05F6                     u85_20:
  4151     05F6                     i1l1565:
  4152     05F6  087C               	movf	___lmul@product+3,w
  4153     05F7  00F3               	movwf	?___lmul+3
  4154     05F8  087B               	movf	___lmul@product+2,w
  4155     05F9  00F2               	movwf	?___lmul+2
  4156     05FA  087A               	movf	___lmul@product+1,w
  4157     05FB  00F1               	movwf	?___lmul+1
  4158     05FC  0879               	movf	___lmul@product,w
  4159     05FD  00F0               	movwf	?___lmul
  4160     05FE                     i1l377:
  4161     05FE  0008               	return
  4162     05FF                     __end_of___lmul:
  4163                           
  4164                           	psect	text20
  4165     0240                     __ptext20:	
  4166 ;; *************** function ___aldiv *****************
  4167 ;; Defined at:
  4168 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  divisor         4    0[BANK0 ] long 
  4171 ;;  dividend        4    4[BANK0 ] long 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  quotient        4   10[BANK0 ] long 
  4174 ;;  sign            1    9[BANK0 ] unsigned char 
  4175 ;;  counter         1    8[BANK0 ] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  4    0[BANK0 ] long 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, btemp+1
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         0       8       0       0       0
  4186 ;;      Locals:         0       6       0       0       0
  4187 ;;      Temps:          1       0       0       0       0
  4188 ;;      Totals:         1      14       0       0       0
  4189 ;;Total ram usage:       15 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_map
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198     0240                     ___aldiv:	
  4199                           ;psect for function ___aldiv
  4200                           
  4201     0240                     i1l1569:	
  4202                           ;incstack = 0
  4203                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  4204                           
  4205     0240  1283               	bcf	3,5	;RP0=0, select bank0
  4206     0241  1303               	bcf	3,6	;RP1=0, select bank0
  4207     0242  01A9               	clrf	___aldiv@sign
  4208     0243                     i1l1571:
  4209     0243  1FA3               	btfss	___aldiv@divisor+3,7
  4210     0244  2A46               	goto	u86_21
  4211     0245  2A47               	goto	u86_20
  4212     0246                     u86_21:
  4213     0246  2A54               	goto	i1l428
  4214     0247                     u86_20:
  4215     0247                     i1l1573:
  4216     0247  09A0               	comf	___aldiv@divisor,f
  4217     0248  09A1               	comf	___aldiv@divisor+1,f
  4218     0249  09A2               	comf	___aldiv@divisor+2,f
  4219     024A  09A3               	comf	___aldiv@divisor+3,f
  4220     024B  0AA0               	incf	___aldiv@divisor,f
  4221     024C  1903               	skipnz
  4222     024D  0AA1               	incf	___aldiv@divisor+1,f
  4223     024E  1903               	skipnz
  4224     024F  0AA2               	incf	___aldiv@divisor+2,f
  4225     0250  1903               	skipnz
  4226     0251  0AA3               	incf	___aldiv@divisor+3,f
  4227     0252  01A9               	clrf	___aldiv@sign
  4228     0253  0AA9               	incf	___aldiv@sign,f
  4229     0254                     i1l428:
  4230     0254  1FA7               	btfss	___aldiv@dividend+3,7
  4231     0255  2A57               	goto	u87_21
  4232     0256  2A58               	goto	u87_20
  4233     0257                     u87_21:
  4234     0257  2A67               	goto	i1l1579
  4235     0258                     u87_20:
  4236     0258                     i1l1575:
  4237     0258  09A4               	comf	___aldiv@dividend,f
  4238     0259  09A5               	comf	___aldiv@dividend+1,f
  4239     025A  09A6               	comf	___aldiv@dividend+2,f
  4240     025B  09A7               	comf	___aldiv@dividend+3,f
  4241     025C  0AA4               	incf	___aldiv@dividend,f
  4242     025D  1903               	skipnz
  4243     025E  0AA5               	incf	___aldiv@dividend+1,f
  4244     025F  1903               	skipnz
  4245     0260  0AA6               	incf	___aldiv@dividend+2,f
  4246     0261  1903               	skipnz
  4247     0262  0AA7               	incf	___aldiv@dividend+3,f
  4248     0263                     i1l1577:
  4249     0263  3001               	movlw	1
  4250     0264  00FF               	movwf	btemp+1
  4251     0265  087F               	movf	btemp+1,w
  4252     0266  06A9               	xorwf	___aldiv@sign,f
  4253     0267                     i1l1579:
  4254     0267  3000               	movlw	0
  4255     0268  00AD               	movwf	___aldiv@quotient+3
  4256     0269  3000               	movlw	0
  4257     026A  00AC               	movwf	___aldiv@quotient+2
  4258     026B  3000               	movlw	0
  4259     026C  00AB               	movwf	___aldiv@quotient+1
  4260     026D  3000               	movlw	0
  4261     026E  00AA               	movwf	___aldiv@quotient
  4262     026F                     i1l1581:
  4263     026F  0823               	movf	___aldiv@divisor+3,w
  4264     0270  0422               	iorwf	___aldiv@divisor+2,w
  4265     0271  0421               	iorwf	___aldiv@divisor+1,w
  4266     0272  0420               	iorwf	___aldiv@divisor,w
  4267     0273  1903               	skipnz
  4268     0274  2A76               	goto	u88_21
  4269     0275  2A77               	goto	u88_20
  4270     0276                     u88_21:
  4271     0276  2AC4               	goto	i1l1603
  4272     0277                     u88_20:
  4273     0277                     i1l1583:
  4274     0277  01A8               	clrf	___aldiv@counter
  4275     0278  0AA8               	incf	___aldiv@counter,f
  4276     0279  2A87               	goto	i1l1589
  4277     027A                     i1l1585:
  4278     027A  3001               	movlw	1
  4279     027B  00FD               	movwf	??___aldiv
  4280     027C                     u89_25:
  4281     027C  1003               	clrc
  4282     027D  0DA0               	rlf	___aldiv@divisor,f
  4283     027E  0DA1               	rlf	___aldiv@divisor+1,f
  4284     027F  0DA2               	rlf	___aldiv@divisor+2,f
  4285     0280  0DA3               	rlf	___aldiv@divisor+3,f
  4286     0281  0BFD               	decfsz	??___aldiv,f
  4287     0282  2A7C               	goto	u89_25
  4288     0283                     i1l1587:
  4289     0283  3001               	movlw	1
  4290     0284  00FF               	movwf	btemp+1
  4291     0285  087F               	movf	btemp+1,w
  4292     0286  07A8               	addwf	___aldiv@counter,f
  4293     0287                     i1l1589:
  4294     0287  1FA3               	btfss	___aldiv@divisor+3,7
  4295     0288  2A8A               	goto	u90_21
  4296     0289  2A8B               	goto	u90_20
  4297     028A                     u90_21:
  4298     028A  2A7A               	goto	i1l1585
  4299     028B                     u90_20:
  4300     028B                     i1l1591:
  4301     028B  3001               	movlw	1
  4302     028C  00FD               	movwf	??___aldiv
  4303     028D                     u91_25:
  4304     028D  1003               	clrc
  4305     028E  0DAA               	rlf	___aldiv@quotient,f
  4306     028F  0DAB               	rlf	___aldiv@quotient+1,f
  4307     0290  0DAC               	rlf	___aldiv@quotient+2,f
  4308     0291  0DAD               	rlf	___aldiv@quotient+3,f
  4309     0292  0BFD               	decfsz	??___aldiv,f
  4310     0293  2A8D               	goto	u91_25
  4311     0294                     i1l1593:
  4312     0294  0823               	movf	___aldiv@divisor+3,w
  4313     0295  0227               	subwf	___aldiv@dividend+3,w
  4314     0296  1D03               	skipz
  4315     0297  2AA2               	goto	u92_25
  4316     0298  0822               	movf	___aldiv@divisor+2,w
  4317     0299  0226               	subwf	___aldiv@dividend+2,w
  4318     029A  1D03               	skipz
  4319     029B  2AA2               	goto	u92_25
  4320     029C  0821               	movf	___aldiv@divisor+1,w
  4321     029D  0225               	subwf	___aldiv@dividend+1,w
  4322     029E  1D03               	skipz
  4323     029F  2AA2               	goto	u92_25
  4324     02A0  0820               	movf	___aldiv@divisor,w
  4325     02A1  0224               	subwf	___aldiv@dividend,w
  4326     02A2                     u92_25:
  4327     02A2  1C03               	skipc
  4328     02A3  2AA5               	goto	u92_21
  4329     02A4  2AA6               	goto	u92_20
  4330     02A5                     u92_21:
  4331     02A5  2AB5               	goto	i1l1599
  4332     02A6                     u92_20:
  4333     02A6                     i1l1595:
  4334     02A6  0820               	movf	___aldiv@divisor,w
  4335     02A7  02A4               	subwf	___aldiv@dividend,f
  4336     02A8  0821               	movf	___aldiv@divisor+1,w
  4337     02A9  1C03               	skipc
  4338     02AA  0F21               	incfsz	___aldiv@divisor+1,w
  4339     02AB  02A5               	subwf	___aldiv@dividend+1,f
  4340     02AC  0822               	movf	___aldiv@divisor+2,w
  4341     02AD  1C03               	skipc
  4342     02AE  0F22               	incfsz	___aldiv@divisor+2,w
  4343     02AF  02A6               	subwf	___aldiv@dividend+2,f
  4344     02B0  0823               	movf	___aldiv@divisor+3,w
  4345     02B1  1C03               	skipc
  4346     02B2  0F23               	incfsz	___aldiv@divisor+3,w
  4347     02B3  02A7               	subwf	___aldiv@dividend+3,f
  4348     02B4                     i1l1597:
  4349     02B4  142A               	bsf	___aldiv@quotient,0
  4350     02B5                     i1l1599:
  4351     02B5  3001               	movlw	1
  4352     02B6                     u93_25:
  4353     02B6  1003               	clrc
  4354     02B7  0CA3               	rrf	___aldiv@divisor+3,f
  4355     02B8  0CA2               	rrf	___aldiv@divisor+2,f
  4356     02B9  0CA1               	rrf	___aldiv@divisor+1,f
  4357     02BA  0CA0               	rrf	___aldiv@divisor,f
  4358     02BB  3EFF               	addlw	-1
  4359     02BC  1D03               	skipz
  4360     02BD  2AB6               	goto	u93_25
  4361     02BE                     i1l1601:
  4362     02BE  3001               	movlw	1
  4363     02BF  02A8               	subwf	___aldiv@counter,f
  4364     02C0  1D03               	btfss	3,2
  4365     02C1  2AC3               	goto	u94_21
  4366     02C2  2AC4               	goto	u94_20
  4367     02C3                     u94_21:
  4368     02C3  2A8B               	goto	i1l1591
  4369     02C4                     u94_20:
  4370     02C4                     i1l1603:
  4371     02C4  0829               	movf	___aldiv@sign,w
  4372     02C5  1903               	btfsc	3,2
  4373     02C6  2AC8               	goto	u95_21
  4374     02C7  2AC9               	goto	u95_20
  4375     02C8                     u95_21:
  4376     02C8  2AD4               	goto	i1l1607
  4377     02C9                     u95_20:
  4378     02C9                     i1l1605:
  4379     02C9  09AA               	comf	___aldiv@quotient,f
  4380     02CA  09AB               	comf	___aldiv@quotient+1,f
  4381     02CB  09AC               	comf	___aldiv@quotient+2,f
  4382     02CC  09AD               	comf	___aldiv@quotient+3,f
  4383     02CD  0AAA               	incf	___aldiv@quotient,f
  4384     02CE  1903               	skipnz
  4385     02CF  0AAB               	incf	___aldiv@quotient+1,f
  4386     02D0  1903               	skipnz
  4387     02D1  0AAC               	incf	___aldiv@quotient+2,f
  4388     02D2  1903               	skipnz
  4389     02D3  0AAD               	incf	___aldiv@quotient+3,f
  4390     02D4                     i1l1607:
  4391     02D4  082D               	movf	___aldiv@quotient+3,w
  4392     02D5  00A3               	movwf	?___aldiv+3
  4393     02D6  082C               	movf	___aldiv@quotient+2,w
  4394     02D7  00A2               	movwf	?___aldiv+2
  4395     02D8  082B               	movf	___aldiv@quotient+1,w
  4396     02D9  00A1               	movwf	?___aldiv+1
  4397     02DA  082A               	movf	___aldiv@quotient,w
  4398     02DB  00A0               	movwf	?___aldiv
  4399     02DC                     i1l438:
  4400     02DC  0008               	return
  4401     02DD                     __end_of___aldiv:
  4402                           
  4403                           	psect	text21
  4404     07E5                     __ptext21:	
  4405 ;; *************** function _adc_read *****************
  4406 ;; Defined at:
  4407 ;;		line 38 in file "ADC.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  2    0[COMMON] int 
  4414 ;; Registers used:
  4415 ;;		wreg
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4421 ;;      Params:         2       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0
  4423 ;;      Temps:          2       0       0       0       0
  4424 ;;      Totals:         4       0       0       0       0
  4425 ;;Total ram usage:        4 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_isr
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434     07E5                     _adc_read:	
  4435                           ;psect for function _adc_read
  4436                           
  4437     07E5                     i1l1659:	
  4438                           ;incstack = 0
  4439                           ; Regs used in _adc_read: [wreg]
  4440                           
  4441                           
  4442                           ;ADC.c: 41:     return ADRESH;
  4443     07E5  1283               	bcf	3,5	;RP0=0, select bank0
  4444     07E6  1303               	bcf	3,6	;RP1=0, select bank0
  4445     07E7  081E               	movf	30,w	;volatile
  4446     07E8  00F2               	movwf	??_adc_read
  4447     07E9  01F3               	clrf	??_adc_read+1
  4448     07EA  0872               	movf	??_adc_read,w
  4449     07EB  00F0               	movwf	?_adc_read
  4450     07EC  0873               	movf	??_adc_read+1,w
  4451     07ED  00F1               	movwf	?_adc_read+1
  4452     07EE                     i1l31:
  4453     07EE  0008               	return
  4454     07EF                     __end_of_adc_read:
  4455                           
  4456                           	psect	text22
  4457     0771                     __ptext22:	
  4458 ;; *************** function _adc_change_channel *****************
  4459 ;; Defined at:
  4460 ;;		line 44 in file "ADC.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  channel         2    0[COMMON] int 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0, btemp+1
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4474 ;;      Params:         2       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0
  4476 ;;      Temps:          1       0       0       0       0
  4477 ;;      Totals:         3       0       0       0       0
  4478 ;;Total ram usage:        3 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_isr
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487     0771                     _adc_change_channel:	
  4488                           ;psect for function _adc_change_channel
  4489                           
  4490     0771                     i1l1663:	
  4491                           ;incstack = 0
  4492                           ; Regs used in _adc_change_channel: [wreg+status,2+status,0+btemp+1]
  4493                           
  4494                           
  4495                           ;ADC.c: 44: void adc_change_channel(int channel);ADC.c: 45: {;ADC.c: 46:     if(channel 
      +                          < 14)
  4496     0771  0871               	movf	adc_change_channel@channel+1,w
  4497     0772  3A80               	xorlw	128
  4498     0773  00FF               	movwf	btemp+1
  4499     0774  3080               	movlw	128
  4500     0775  027F               	subwf	btemp+1,w
  4501     0776  1D03               	skipz
  4502     0777  2F7A               	goto	u109_25
  4503     0778  300E               	movlw	14
  4504     0779  0270               	subwf	adc_change_channel@channel,w
  4505     077A                     u109_25:
  4506     077A  1803               	skipnc
  4507     077B  2F7D               	goto	u109_21
  4508     077C  2F7E               	goto	u109_20
  4509     077D                     u109_21:
  4510     077D  2F8A               	goto	i1l1667
  4511     077E                     u109_20:
  4512     077E                     i1l1665:
  4513                           
  4514                           ;ADC.c: 47:         ADCON0bits.CHS = channel;
  4515     077E  0870               	movf	adc_change_channel@channel,w
  4516     077F  00F2               	movwf	??_adc_change_channel
  4517     0780  0DF2               	rlf	??_adc_change_channel,f
  4518     0781  0DF2               	rlf	??_adc_change_channel,f
  4519     0782  1283               	bcf	3,5	;RP0=0, select bank0
  4520     0783  1303               	bcf	3,6	;RP1=0, select bank0
  4521     0784  081F               	movf	31,w	;volatile
  4522     0785  0672               	xorwf	??_adc_change_channel,w
  4523     0786  39C3               	andlw	-61
  4524     0787  0672               	xorwf	??_adc_change_channel,w
  4525     0788  009F               	movwf	31	;volatile
  4526     0789  2F8E               	goto	i1l36
  4527     078A                     i1l1667:
  4528                           
  4529                           ;ADC.c: 49:         ADCON0bits.CHS = 0b0000;
  4530     078A  30C3               	movlw	-61
  4531     078B  1283               	bcf	3,5	;RP0=0, select bank0
  4532     078C  1303               	bcf	3,6	;RP1=0, select bank0
  4533     078D  059F               	andwf	31,f	;volatile
  4534     078E                     i1l36:
  4535     078E  0008               	return
  4536     078F                     __end_of_adc_change_channel:
  4537     007E                     btemp	set	126	;btemp
  4538     007E                     wtemp0	set	126
  4539                           
  4540                           	psect	idloc
  4541                           
  4542                           ;Config register IDLOC0 @ 0x2000
  4543                           ;	unspecified, using default values
  4544     2000                     	org	8192
  4545     2000  3FFF               	dw	16383
  4546                           
  4547                           ;Config register IDLOC1 @ 0x2001
  4548                           ;	unspecified, using default values
  4549     2001                     	org	8193
  4550     2001  3FFF               	dw	16383
  4551                           
  4552                           ;Config register IDLOC2 @ 0x2002
  4553                           ;	unspecified, using default values
  4554     2002                     	org	8194
  4555     2002  3FFF               	dw	16383
  4556                           
  4557                           ;Config register IDLOC3 @ 0x2003
  4558                           ;	unspecified, using default values
  4559     2003                     	org	8195
  4560     2003  3FFF               	dw	16383
  4561                           
  4562                           	psect	config
  4563                           
  4564                           ;Config register CONFIG1 @ 0x2007
  4565                           ;	Oscillator Selection bits
  4566                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4567                           ;	Watchdog Timer Enable bit
  4568                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4569                           ;	Power-up Timer Enable bit
  4570                           ;	PWRTE = OFF, PWRT disabled
  4571                           ;	RE3/MCLR pin function select bit
  4572                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4573                           ;	Code Protection bit
  4574                           ;	CP = OFF, Program memory code protection is disabled
  4575                           ;	Data Code Protection bit
  4576                           ;	CPD = OFF, Data memory code protection is disabled
  4577                           ;	Brown Out Reset Selection bits
  4578                           ;	BOREN = OFF, BOR disabled
  4579                           ;	Internal External Switchover bit
  4580                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4581                           ;	Fail-Safe Clock Monitor Enabled bit
  4582                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4583                           ;	Low Voltage Programming Enable bit
  4584                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4585                           ;	In-Circuit Debugger Mode bit
  4586                           ;	DEBUG = 0x1, unprogrammed default
  4587     2007                     	org	8199
  4588     2007  20D5               	dw	8405
  4589                           
  4590                           ;Config register CONFIG2 @ 0x2008
  4591                           ;	Brown-out Reset Selection bit
  4592                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4593                           ;	Flash Program Memory Self Write Enable bits
  4594                           ;	WRT = OFF, Write protection off
  4595     2008                     	org	8200
  4596     2008  3FFF               	dw	16383

Data Sizes:
    Strings     41
    Constant    10
    Data        71
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      47
    BANK1            80     23      23
    BANK3            96     71      83
    BANK2            96      0      71

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_5(CODE[4]), STR_3(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> cont(BANK3[8]), volt(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_write_char@c	PTR unsigned char  size(2) Largest target is 71
		 -> main@texto(BANK3[71]), STR_1(CODE[20]), volt(BANK0[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 9
		 -> cont(BANK3[8]), STR_4(CODE[9]), STR_2(CODE[8]), volt(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _map->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_adc_init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->_map
    _map->___aldiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                77    77      0    3852
                                             19 BANK1      4     4      0
                                              0 BANK3     71    71      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _UART_write_char
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    17      5    1682
                                              5 BANK1     14     9      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              0 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                             33 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     514
                     _UART_RX_config
                     _UART_TX_config
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             4     2      2     230
                                             33 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                       2     0      2     142
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART_RX_config                                       2     0      2     142
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_write_char                                      2     0      2     221
                                             33 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     620
                                             37 BANK0      2     0      2
                                              0 BANK1      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                             34 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     614
                                             37 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                             37 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                             34 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                             33 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0    1493
                                             26 BANK0      7     7      0
                 _adc_change_channel
                           _adc_read
                                _map
                  i1_UART_write_char
 ---------------------------------------------------------------------------------
 (6) i1_UART_write_char                                    2     0      2      97
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _map                                                 12     2     10    1253
                                             14 BANK0     12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _adc_change_channel                                   3     1      2     120
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_write_char
   _setup
     _UART_RX_config
     _UART_TX_config
     _adc_init
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)
   _adc_change_channel
   _adc_read
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul
   i1_UART_write_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     47      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      47      11       74.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      17       7       28.7%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      EE      12        0.0%
ABS                  0      0      EE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Nov 19 15:39:06 2023

                         _V 0048                           pc 0002                          l22 03D0  
                        l50 07F4                          l28 03DF                          l53 07AA  
                        l62 0770                          l56 07E4                          l65 0497  
                        l74 0443                          l68 07C4                          fsr 0004  
                       l122 06FC                         l109 0681                         l117 06BE  
                       l126 0724                         l241 0121                         l237 010D  
                       l249 052B                         l359 023F                         l635 05B8  
                       l645 06FA                         _RE0 0048                         _RE1 0049  
                       u700 039B                         u701 039A                         u710 03A7  
                       u711 03A6                         u800 06B0                         u720 03B3  
                       u801 06AF                         u721 03B2                         u730 03BF  
                       u731 03BE                         u740 03CB                         u741 03CA  
                       u750 0654                         u751 0653                         u760 0663  
                       u680 0386                         u761 0662                         u681 0385  
                       u770 0671                         u690 038F                         u771 0670  
                       u691 038E                         u780 0693                         u781 0692  
                       u790 06A2                         u791 06A1                         u960 057D  
                       u961 057C                         u980 058F                         u981 058E  
                       u975 0581                         u995 0590                         _map 0498  
                       _isr 02DD                         fsr0 0004                         indf 0000  
                      l2001 06F0                        l2011 0757                        l2003 06F6  
                      l2021 0444                        l2013 075A                        l2007 07D8  
                      l2023 044A                        l2015 0761                        l2031 03E0  
                      l2111 005F                        l2025 0455                        l2017 0767  
                      l2009 0752                        l2033 03E5                        l2041 014C  
                      l2121 0081                        l2113 0065                        l2027 0466  
                      l2019 076A                        l2035 0411                        l2051 0161  
                      l2043 0152                        l2131 00C4                        l2123 008B  
                      l2115 0070                        l2107 003E                        l2029 046C  
                      l2037 0419                        l1501 0663                        l2061 0192  
                      l2053 017E                        l2045 0159                        l2141 0107  
                      l2133 00CE                        l2125 0096                        l2117 0073  
                      l2109 0048                        l1511 0676                        l1431 037E  
                      l2063 0197                        l2055 0186                        l2047 0160  
                      l2039 0147                        l2151 0125                        l2135 00D9  
                      l2127 00A0                        l2119 007C                        l1521 0680  
                      l1513 0678                        l1505 0668                        l1441 039B  
                      l1433 0386                        l2081 01CC                        l2073 01B5  
                      l2057 018A                        l2153 012F                        l2145 0111  
                      l2137 00E3                        l2129 00B9                        l1515 067B  
                      l1507 0671                        l1531 0697                        l1451 03B8  
                      l1443 03A0                        l1435 0389                        l1427 0371  
                      l1611 0573                        l2091 0220                        l2083 01D2  
                      l2075 01B9                        l2059 018E                        l2155 0135  
                      l2147 011B                        l2139 00FC                        l1517 067C  
                      l1541 06B0                        l1533 0699                        l1525 0682  
                      l1461 03D3                        l1453 03BF                        l1445 03A7  
                      l1437 038F                        l1429 0374                        l1621 058B  
                      l1613 0577                        l2085 01D5                        l2077 01BF  
                      l2069 0199                        l2093 0229                        l1711 0702  
                      l1519 067F                        l1551 06BB                        l1535 06A2  
                      l1527 0688                        l1463 03D4                        l1455 03C4  
                      l1447 03AC                        l1439 0394                        l1631 05AE  
                      l1623 058F                        l1615 057D                        l2087 0213  
                      l2079 01C5                        l2095 0239                        l1713 070E  
                      l1545 06B5                        l1529 0693                        l1465 03D5  
                      l1457 03CB                        l1449 03B3                        l1721 04E9  
                      l1625 05A0                        l1617 0580                        l1633 05B4  
                      l2089 021A                        l1715 0714                        l1491 0643  
                      l1547 06B7                        l1539 06A7                        l1467 03DC  
                      l1459 03D0                        l1731 04F2                        l1723 04EC  
                      l1627 05A6                        l1619 0587                        l1709 06FB  
                      l1493 0649                        l1549 06BA                        l1741 04FE  
                      l1733 04F3                        l1725 04ED                        l1717 04E4  
                      l1629 05A7                        l2197 0173                        l1495 0654  
                      l1751 0503                        l1743 04FF                        l1735 04F8  
                      l1727 04F0                        l1719 04E8                        l1497 0658  
                      l1761 0520                        l1753 0506                        l1745 0500  
                      l1737 04F9                        l1729 04F1                        l1499 065A  
                      l1755 0509                        l1747 0501                        l1739 04FD  
                      l1757 050C                        l1749 0502                        l1759 0515  
                      l1961 07F2                        l1971 07A7                        l1963 0792  
                      l1965 0793                        l1981 07BA                        l1973 07AE  
                      ?_map 002E                        l1967 0799                        l1983 07C1  
                      l1975 07B0                        l1991 06D1                        l1969 079C  
                      l1977 07B1                        l1993 06D5                        l1985 06BF  
                      l1979 07B7                        l1995 06D9                        l1987 06C7  
                      l1997 06E3                        l1989 06CA                        l1999 06E9  
                      _ADIF 0066                        ?_isr 0070                        STR_1 061A  
                      STR_2 0637                        STR_3 063F                        STR_4 062E  
                      STR_5 063F                        u1000 05A0                        u1001 059F  
                      u1020 05B4                        u1021 05B3                        u1005 059C  
                      u1015 05A8                        u1150 0702                        u1151 0701  
                      u1160 0724                        u1400 06F6                        u1161 0723  
                      u1401 06F5                        u1410 0757                        u1411 0756  
                      u1420 0767                        u1500 01C5                        u1421 0766  
                      u1501 01C4                        u1430 03F9                        u1350 06C7  
                      u1510 0229                        u1351 06C6                        u1511 0228  
                      u1440 042B                        u1520 0239                        u1521 0238  
                      u1450 0443                        u1370 06D9                        u1530 0052  
                      u1451 0442                        u1371 06D8                        u1380 06E3  
                      u1460 0152                        u1540 0065                        u1381 06E2  
                      u1365 06CB                        u1461 0151                        u1541 0064  
                      u1470 018E                        u1550 010D                        u1471 018D  
                      u1607 013D                        u1551 010C                        u1480 01B4  
                      u1560 0111                        u1617 037A                        u1385 06DF  
                      u1481 01B3                        u1561 0110                        u1490 01BF  
                      u1570 0121                        u1627 07BE                        u1395 06EA  
                      u1491 01BE                        u1571 0120                        u1580 0125  
                      u1637 0450                        u1485 01B0                        u1581 0124  
                      u1647 0461                        u1657 0470                        u1667 07A2  
                      u1597 006B                        i1l31 07EE                        i1l36 078E  
                      _RCIF 0065                        i1l83 04E3           ?_Lcd_Write_String 0045  
                      _cont 01DB                        _main 003E                        btemp 007E  
                      _volt 004B                        start 0012          ??_Lcd_Write_String 00A0  
           __end_of_Lcd_Cmd 07AB            UART_write_char@c 0041                       ??_map 007E  
                     ??_isr 003A             __end_of___aldiv 02DD                       ?_main 0070  
                     _ANSEL 0188             __end_of___lwdiv 05B9                       i1l122 0726  
                     i1l126 074E                       i1l216 031C                       i1l217 0364  
           __end_of___lwmod 06FB                       i1l428 0254                       i1l438 02DC  
                     i1l377 05FE                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       u81_20 05C5  
                     u81_21 05C4                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     u90_20 028B                       u90_21 028A                       u82_21 05CE  
                     u82_22 05D5                       u82_23 05DC                       u91_25 028D  
                     u83_25 05DE                       u92_20 02A6                       u92_21 02A5  
                     u92_25 02A2                       u84_25 05E6                       u85_20 05F6  
                     u85_21 05F5                       u93_25 02B6                       u94_20 02C4  
                     u86_20 0247                       u94_21 02C3                       u86_21 0246  
                     u95_20 02C9                       u87_20 0258                       u95_21 02C8  
                     u87_21 0257                       u88_20 0277                       u88_21 0276  
                     _TXREG 0019                       u89_25 027C         ___lmul@multiplicand 0074  
                     _V_out 01D9             __end_of_dpowers 061A                       _hiper 004A  
                     _setup 04E4                       map@vo 0038                       pclath 000A  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0240  
          __end_of_Lcd_Init 0498            __end_of_Lcd_Port 07F5             __initialization 0015  
              __end_of_main 0147                      ??_main 00B3                      _ADRESH 001E  
                    ?_setup 0070                      _ANSELH 0189            __end_of_adc_init 03E0  
          __end_of_adc_read 07EF                      i1l1601 02BE                      i1l1603 02C4  
                    i1l1605 02C9                      i1l1607 02D4                      i1l1703 0498  
                    i1l1561 05DC                      i1l1705 04DF                      i1l1571 0243  
                    i1l1563 05E5                      i1l1555 05B9                      i1l1581 026F  
                    i1l1573 0247                      i1l1565 05F6                      i1l1557 05C1  
                    i1l1663 0771                      i1l1591 028B                      i1l1583 0277  
                    i1l1575 0258                      i1l1559 05C5                      i1l1831 072C  
                    i1l2199 0359                      i1l1665 077E                      i1l1593 0294  
                    i1l1585 027A                      i1l1577 0263                      i1l1569 0240  
                    i1l1833 0738                      i1l1841 02DD                      i1l1667 078A  
                    i1l1659 07E5                      i1l1595 02A6                      i1l1587 0283  
                    i1l1579 0267                      i1l1835 073E                      i1l1843 02E1  
                    i1l1597 02B4                      i1l1589 0287                      i1l1829 0725  
                    i1l1861 033F                      i1l1853 0320                      i1l1845 02EA  
                    i1l1599 02B5                      i1l1863 0348                      i1l1855 0323  
                    i1l1847 02F5                      i1l1857 032D                      i1l1865 0351  
                    i1l1849 0318                      i1l1859 0336                      u124_20 072C  
                    u124_21 072B                      u109_20 077E                      u125_20 074E  
                    u109_21 077D                      u125_21 074D                      u109_25 077A  
                    u126_20 02E1                      u126_21 02E0                      u127_20 0320  
                    u127_21 031F                      u128_20 0350                      u128_21 034F  
                 ??_Lcd_Cmd 0042                      _SPBRGH 009A   adc_change_channel@channel 0070  
                    ___lmul 05B9                   ??___aldiv 007D                   ??___lwdiv 0045  
                 ??___lwmod 0048                      map@val 002E             _UART_write_char 06FB  
                    saved_w 007E                   ??_sprintf 00AA             Lcd_Set_Cursor@a 0046  
           Lcd_Set_Cursor@b 0045     __end_of__initialization 003A          i1UART_write_char@c 0070  
         __end_of_Lcd_Clear 07E5              __pcstackCOMMON 0070                __pidataBANK2 052C  
             __end_of_setup 052C              _Lcd_Set_Cursor 074F                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                     ??_setup 0045                  __pbssBANK0 0048  
                __pbssBANK3 01D7                  __pmaintext 003E                     ?___lmul 0070  
                __pintentry 0004     __end_of_UART_write_char 0725              ___lmul@product 0079  
    __end_of_Lcd_Set_Cursor 0771                   ?_adc_init 0041                   ?_adc_read 0070  
                ??_Lcd_Init 0045                  ??_Lcd_Port 0041                  __stringtab 0600  
            _Lcd_Write_Char 07AB                     _Lcd_Cmd 078F              _UART_RX_config 0643  
            _UART_TX_config 0682                     ___aldiv 0240                     ___lwdiv 0573  
                   ___lwmod 06BF             ?_Lcd_Set_Cursor 0045                  ??_adc_init 0043  
                ??_adc_read 0072                     __ptext1 0147                     __ptext2 06BF  
                   __ptext3 0573                     __ptext4 04E4                     __ptext5 0371  
                   __ptext6 0682                     __ptext7 0643                     __ptext8 06FB  
                   __ptext9 03E0                     _dpowers 0610            ___aldiv@dividend 0024  
                   _sprintf 0147      __end_of_Lcd_Write_Char 07C5        end_of_initialization 003A  
    __end_of_UART_RX_config 0682      __end_of_UART_TX_config 06BF                   _RCSTAbits 0018  
          ___aldiv@quotient 002A                   Lcd_Port@a 0041            ?_UART_write_char 0041  
                 _PORTCbits 0007                  map@max_out 0036                  map@min_out 0034  
           ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0045           Lcd_Write_String@i 00A3  
           ?_UART_RX_config 0041             ?_UART_TX_config 0041                   _TXSTAbits 0098  
                 _Lcd_Clear 07D8      UART_RX_config@baudrate 0041              __end_of___lmul 05FF  
          _Lcd_Write_String 03E0                 _BAUDCTLbits 0187  __end_of_adc_change_channel 078F  
       start_initialization 0015                 __end_of_map 04E4                 __end_of_isr 0371  
                ?_Lcd_Clear 0070                    ??___lmul 0078                  init_fetch0 07C5  
               __pdataBANK2 0110             adc_init@channel 0041             Lcd_Write_Char@a 0044  
           Lcd_Write_Char@y 0043                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0               __pcstackBANK3 0190                    ?_Lcd_Cmd 0070  
               sprintf@flag 00AE                 sprintf@prec 00AF            ___lwdiv@dividend 0043  
          ??_Lcd_Set_Cursor 0046                    ?___aldiv 0020                    ?___lwdiv 0041  
                  ?___lwmod 00A0                   __pstrings 0600            ___lwdiv@quotient 0045  
                  ?_sprintf 00A5             ___aldiv@divisor 0020           interrupt_function 0004  
           ___aldiv@counter 0028                    _PIE1bits 008C                    Lcd_Cmd@a 0044  
                  _PIR1bits 000C                 ??_Lcd_Clear 0045                   main@F1518 0110  
                 map@max_in 0032                   map@min_in 0030                  _ADCON0bits 001F  
               __stringbase 060F                  _ADCON1bits 009F            ??_Lcd_Write_Char 0042  
                 main@texto 0190            ??_UART_RX_config 0043                    _Lcd_Init 0444  
                  _Lcd_Port 07EF            ??_UART_TX_config 0043           ___lmul@multiplier 0070  
  __end_of_Lcd_Write_String 0444                   isr@opcion 0040          __end_of__stringtab 0610  
                  _adc_init 0371                    _adc_read 07E5           i1_UART_write_char 0725  
                sprintf@val 00B0          ?i1_UART_write_char 0070             ___lwdiv@divisor 0041  
           ___lwdiv@counter 0047                    __ptext10 07AB                    __ptext11 074F  
                  __ptext20 0240                    __ptext12 0444                    __ptext21 07E5  
                  __ptext13 07D8                    __ptext22 0771                    __ptext14 078F  
                  __ptext15 07EF                    __ptext16 02DD                    __ptext17 0725  
                  __ptext18 0498                    __ptext19 05B9         ??i1_UART_write_char 0072  
                  _contador 01D7          _adc_change_channel 0771         ?_adc_change_channel 0070  
    UART_TX_config@baudrate 0041   __end_ofi1_UART_write_char 074F                  _INTCONbits 000B  
      ??_adc_change_channel 0072                    init_ram0 07C9                    intlevel1 0000  
                 sprintf@ap 00AD                   sprintf@sp 00A5            ___lwmod@dividend 00A2  
                 stringcode 060A                  _OSCCONbits 008F          Lcd_Set_Cursor@temp 0047  
                  sprintf@c 00B2                    sprintf@f 00A7             ___lwmod@divisor 00A0  
           ___lwmod@counter 00A4                    stringdir 060A                    stringtab 0600  
              ___aldiv@sign 0029           ??_UART_write_char 0043  
